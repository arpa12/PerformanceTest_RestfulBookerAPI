/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 295.0, "minX": 0.0, "maxY": 51033.0, "series": [{"data": [[0.0, 2024.0], [0.1, 2109.0], [0.2, 2153.0], [0.3, 2153.0], [0.4, 2226.0], [0.5, 2240.0], [0.6, 2254.0], [0.7, 2274.0], [0.8, 2324.0], [0.9, 2342.0], [1.0, 2365.0], [1.1, 2480.0], [1.2, 2482.0], [1.3, 2495.0], [1.4, 2495.0], [1.5, 2499.0], [1.6, 2541.0], [1.7, 2551.0], [1.8, 2606.0], [1.9, 2640.0], [2.0, 2645.0], [2.1, 2661.0], [2.2, 2682.0], [2.3, 2711.0], [2.4, 2736.0], [2.5, 2752.0], [2.6, 2753.0], [2.7, 2755.0], [2.8, 2765.0], [2.9, 2767.0], [3.0, 2775.0], [3.1, 2775.0], [3.2, 2776.0], [3.3, 2776.0], [3.4, 2777.0], [3.5, 2780.0], [3.6, 3121.0], [3.7, 3175.0], [3.8, 3186.0], [3.9, 3209.0], [4.0, 3293.0], [4.1, 3608.0], [4.2, 3641.0], [4.3, 3652.0], [4.4, 3720.0], [4.5, 3819.0], [4.6, 3824.0], [4.7, 3853.0], [4.8, 3857.0], [4.9, 3857.0], [5.0, 3935.0], [5.1, 3939.0], [5.2, 3987.0], [5.3, 4018.0], [5.4, 4021.0], [5.5, 4217.0], [5.6, 4298.0], [5.7, 4395.0], [5.8, 4412.0], [5.9, 4426.0], [6.0, 4436.0], [6.1, 4449.0], [6.2, 4467.0], [6.3, 4475.0], [6.4, 4489.0], [6.5, 4503.0], [6.6, 4519.0], [6.7, 4525.0], [6.8, 4530.0], [6.9, 4531.0], [7.0, 4553.0], [7.1, 4564.0], [7.2, 4573.0], [7.3, 4578.0], [7.4, 4581.0], [7.5, 4593.0], [7.6, 4597.0], [7.7, 4601.0], [7.8, 4602.0], [7.9, 4624.0], [8.0, 4649.0], [8.1, 4672.0], [8.2, 4681.0], [8.3, 4695.0], [8.4, 4701.0], [8.5, 4713.0], [8.6, 4758.0], [8.7, 4764.0], [8.8, 4766.0], [8.9, 4811.0], [9.0, 4829.0], [9.1, 4851.0], [9.2, 4875.0], [9.3, 4879.0], [9.4, 4903.0], [9.5, 4913.0], [9.6, 4928.0], [9.7, 4932.0], [9.8, 4932.0], [9.9, 4948.0], [10.0, 4951.0], [10.1, 4956.0], [10.2, 4971.0], [10.3, 4973.0], [10.4, 4998.0], [10.5, 4999.0], [10.6, 5042.0], [10.7, 5050.0], [10.8, 5087.0], [10.9, 5090.0], [11.0, 5103.0], [11.1, 5167.0], [11.2, 5191.0], [11.3, 5191.0], [11.4, 5197.0], [11.5, 5203.0], [11.6, 5213.0], [11.7, 5218.0], [11.8, 5222.0], [11.9, 5231.0], [12.0, 5237.0], [12.1, 5238.0], [12.2, 5247.0], [12.3, 5250.0], [12.4, 5252.0], [12.5, 5252.0], [12.6, 5262.0], [12.7, 5271.0], [12.8, 5273.0], [12.9, 5292.0], [13.0, 5298.0], [13.1, 5299.0], [13.2, 5303.0], [13.3, 5305.0], [13.4, 5306.0], [13.5, 5319.0], [13.6, 5324.0], [13.7, 5327.0], [13.8, 5341.0], [13.9, 5347.0], [14.0, 5349.0], [14.1, 5351.0], [14.2, 5369.0], [14.3, 5388.0], [14.4, 5389.0], [14.5, 5413.0], [14.6, 5415.0], [14.7, 5416.0], [14.8, 5452.0], [14.9, 5454.0], [15.0, 5477.0], [15.1, 5480.0], [15.2, 5484.0], [15.3, 5515.0], [15.4, 5548.0], [15.5, 5565.0], [15.6, 5572.0], [15.7, 5627.0], [15.8, 5680.0], [15.9, 5686.0], [16.0, 5696.0], [16.1, 5698.0], [16.2, 5703.0], [16.3, 5706.0], [16.4, 5719.0], [16.5, 5722.0], [16.6, 5725.0], [16.7, 5730.0], [16.8, 5741.0], [16.9, 5781.0], [17.0, 5781.0], [17.1, 5798.0], [17.2, 5805.0], [17.3, 5805.0], [17.4, 5816.0], [17.5, 5820.0], [17.6, 5826.0], [17.7, 5837.0], [17.8, 5850.0], [17.9, 5852.0], [18.0, 5864.0], [18.1, 5867.0], [18.2, 5903.0], [18.3, 5904.0], [18.4, 5916.0], [18.5, 5924.0], [18.6, 5941.0], [18.7, 5964.0], [18.8, 5988.0], [18.9, 5995.0], [19.0, 6000.0], [19.1, 6005.0], [19.2, 6027.0], [19.3, 6172.0], [19.4, 6172.0], [19.5, 6244.0], [19.6, 6312.0], [19.7, 6779.0], [19.8, 6798.0], [19.9, 6818.0], [20.0, 6821.0], [20.1, 6854.0], [20.2, 6881.0], [20.3, 6891.0], [20.4, 6923.0], [20.5, 7044.0], [20.6, 7119.0], [20.7, 7126.0], [20.8, 7127.0], [20.9, 7165.0], [21.0, 7166.0], [21.1, 7200.0], [21.2, 7201.0], [21.3, 7216.0], [21.4, 7266.0], [21.5, 7344.0], [21.6, 7370.0], [21.7, 7393.0], [21.8, 7402.0], [21.9, 7453.0], [22.0, 7462.0], [22.1, 7478.0], [22.2, 7502.0], [22.3, 7514.0], [22.4, 7558.0], [22.5, 7675.0], [22.6, 7679.0], [22.7, 7680.0], [22.8, 7739.0], [22.9, 7770.0], [23.0, 7801.0], [23.1, 7858.0], [23.2, 7906.0], [23.3, 7937.0], [23.4, 7963.0], [23.5, 7978.0], [23.6, 7995.0], [23.7, 7999.0], [23.8, 8019.0], [23.9, 8047.0], [24.0, 8129.0], [24.1, 8147.0], [24.2, 8149.0], [24.3, 8169.0], [24.4, 8211.0], [24.5, 8225.0], [24.6, 8228.0], [24.7, 8234.0], [24.8, 8254.0], [24.9, 8260.0], [25.0, 8272.0], [25.1, 8294.0], [25.2, 8312.0], [25.3, 8316.0], [25.4, 8342.0], [25.5, 8344.0], [25.6, 8363.0], [25.7, 8369.0], [25.8, 8373.0], [25.9, 8389.0], [26.0, 8407.0], [26.1, 8465.0], [26.2, 8465.0], [26.3, 8465.0], [26.4, 8469.0], [26.5, 8475.0], [26.6, 8480.0], [26.7, 8516.0], [26.8, 8536.0], [26.9, 8538.0], [27.0, 8545.0], [27.1, 8569.0], [27.2, 8571.0], [27.3, 8580.0], [27.4, 8583.0], [27.5, 8605.0], [27.6, 8609.0], [27.7, 8626.0], [27.8, 8629.0], [27.9, 8654.0], [28.0, 8700.0], [28.1, 8702.0], [28.2, 8710.0], [28.3, 8721.0], [28.4, 8733.0], [28.5, 8734.0], [28.6, 8742.0], [28.7, 8747.0], [28.8, 8747.0], [28.9, 8748.0], [29.0, 8749.0], [29.1, 8754.0], [29.2, 8757.0], [29.3, 8761.0], [29.4, 8809.0], [29.5, 8824.0], [29.6, 8853.0], [29.7, 8855.0], [29.8, 8866.0], [29.9, 8916.0], [30.0, 8922.0], [30.1, 8939.0], [30.2, 8943.0], [30.3, 8946.0], [30.4, 8960.0], [30.5, 8963.0], [30.6, 8967.0], [30.7, 8969.0], [30.8, 8973.0], [30.9, 9021.0], [31.0, 9044.0], [31.1, 9058.0], [31.2, 9063.0], [31.3, 9084.0], [31.4, 9092.0], [31.5, 9096.0], [31.6, 9109.0], [31.7, 9110.0], [31.8, 9165.0], [31.9, 9168.0], [32.0, 9173.0], [32.1, 9193.0], [32.2, 9195.0], [32.3, 9212.0], [32.4, 9213.0], [32.5, 9224.0], [32.6, 9224.0], [32.7, 9225.0], [32.8, 9247.0], [32.9, 9262.0], [33.0, 9286.0], [33.1, 9294.0], [33.2, 9313.0], [33.3, 9334.0], [33.4, 9336.0], [33.5, 9338.0], [33.6, 9346.0], [33.7, 9359.0], [33.8, 9379.0], [33.9, 9412.0], [34.0, 9413.0], [34.1, 9422.0], [34.2, 9423.0], [34.3, 9428.0], [34.4, 9442.0], [34.5, 9446.0], [34.6, 9454.0], [34.7, 9497.0], [34.8, 9553.0], [34.9, 9564.0], [35.0, 10104.0], [35.1, 10171.0], [35.2, 10610.0], [35.3, 10655.0], [35.4, 10737.0], [35.5, 10783.0], [35.6, 10789.0], [35.7, 10806.0], [35.8, 10817.0], [35.9, 10968.0], [36.0, 10997.0], [36.1, 11016.0], [36.2, 11033.0], [36.3, 11081.0], [36.4, 11113.0], [36.5, 11130.0], [36.6, 11152.0], [36.7, 11160.0], [36.8, 11202.0], [36.9, 11205.0], [37.0, 11236.0], [37.1, 11254.0], [37.2, 11257.0], [37.3, 11261.0], [37.4, 11269.0], [37.5, 11287.0], [37.6, 11289.0], [37.7, 11321.0], [37.8, 11337.0], [37.9, 11346.0], [38.0, 11361.0], [38.1, 11362.0], [38.2, 11396.0], [38.3, 11400.0], [38.4, 11404.0], [38.5, 11427.0], [38.6, 11436.0], [38.7, 11447.0], [38.8, 11447.0], [38.9, 11476.0], [39.0, 11480.0], [39.1, 11495.0], [39.2, 11500.0], [39.3, 11502.0], [39.4, 11513.0], [39.5, 11517.0], [39.6, 11530.0], [39.7, 11531.0], [39.8, 11537.0], [39.9, 11543.0], [40.0, 11559.0], [40.1, 11567.0], [40.2, 11571.0], [40.3, 11573.0], [40.4, 11577.0], [40.5, 11578.0], [40.6, 11649.0], [40.7, 11653.0], [40.8, 11659.0], [40.9, 11661.0], [41.0, 11675.0], [41.1, 11684.0], [41.2, 11692.0], [41.3, 11695.0], [41.4, 11701.0], [41.5, 11712.0], [41.6, 11718.0], [41.7, 11729.0], [41.8, 11735.0], [41.9, 11750.0], [42.0, 11750.0], [42.1, 11758.0], [42.2, 11770.0], [42.3, 11771.0], [42.4, 11778.0], [42.5, 11791.0], [42.6, 11791.0], [42.7, 11808.0], [42.8, 11821.0], [42.9, 11822.0], [43.0, 11831.0], [43.1, 11831.0], [43.2, 11831.0], [43.3, 11832.0], [43.4, 11842.0], [43.5, 11849.0], [43.6, 11850.0], [43.7, 11857.0], [43.8, 11859.0], [43.9, 11860.0], [44.0, 11862.0], [44.1, 11873.0], [44.2, 11890.0], [44.3, 11893.0], [44.4, 11922.0], [44.5, 11945.0], [44.6, 11957.0], [44.7, 11974.0], [44.8, 11975.0], [44.9, 11988.0], [45.0, 12017.0], [45.1, 12021.0], [45.2, 12024.0], [45.3, 12034.0], [45.4, 12049.0], [45.5, 12056.0], [45.6, 12064.0], [45.7, 12104.0], [45.8, 12115.0], [45.9, 12119.0], [46.0, 12122.0], [46.1, 12126.0], [46.2, 12130.0], [46.3, 12144.0], [46.4, 12169.0], [46.5, 12170.0], [46.6, 12170.0], [46.7, 12174.0], [46.8, 12185.0], [46.9, 12197.0], [47.0, 12223.0], [47.1, 12225.0], [47.2, 12228.0], [47.3, 12230.0], [47.4, 12230.0], [47.5, 12262.0], [47.6, 12270.0], [47.7, 12297.0], [47.8, 12318.0], [47.9, 12338.0], [48.0, 12345.0], [48.1, 12367.0], [48.2, 12369.0], [48.3, 12384.0], [48.4, 12384.0], [48.5, 12402.0], [48.6, 12406.0], [48.7, 12414.0], [48.8, 12420.0], [48.9, 12426.0], [49.0, 12453.0], [49.1, 12453.0], [49.2, 12501.0], [49.3, 12511.0], [49.4, 12527.0], [49.5, 12591.0], [49.6, 12605.0], [49.7, 12626.0], [49.8, 12632.0], [49.9, 12666.0], [50.0, 12673.0], [50.1, 12676.0], [50.2, 12709.0], [50.3, 12725.0], [50.4, 12728.0], [50.5, 12749.0], [50.6, 12768.0], [50.7, 12773.0], [50.8, 12837.0], [50.9, 12858.0], [51.0, 12908.0], [51.1, 12924.0], [51.2, 12931.0], [51.3, 12946.0], [51.4, 12949.0], [51.5, 12952.0], [51.6, 12976.0], [51.7, 12992.0], [51.8, 12999.0], [51.9, 13070.0], [52.0, 13080.0], [52.1, 13101.0], [52.2, 13106.0], [52.3, 13111.0], [52.4, 13140.0], [52.5, 13154.0], [52.6, 13155.0], [52.7, 13169.0], [52.8, 13171.0], [52.9, 13183.0], [53.0, 13187.0], [53.1, 13202.0], [53.2, 13208.0], [53.3, 13216.0], [53.4, 13223.0], [53.5, 13235.0], [53.6, 13274.0], [53.7, 13288.0], [53.8, 13336.0], [53.9, 13360.0], [54.0, 13399.0], [54.1, 13405.0], [54.2, 13413.0], [54.3, 13429.0], [54.4, 13431.0], [54.5, 13506.0], [54.6, 13512.0], [54.7, 13520.0], [54.8, 13549.0], [54.9, 13555.0], [55.0, 13625.0], [55.1, 13640.0], [55.2, 13669.0], [55.3, 13709.0], [55.4, 13729.0], [55.5, 13753.0], [55.6, 13758.0], [55.7, 13759.0], [55.8, 13765.0], [55.9, 13776.0], [56.0, 13783.0], [56.1, 13783.0], [56.2, 13789.0], [56.3, 13811.0], [56.4, 13817.0], [56.5, 13838.0], [56.6, 13857.0], [56.7, 13867.0], [56.8, 13868.0], [56.9, 13881.0], [57.0, 13902.0], [57.1, 13927.0], [57.2, 13934.0], [57.3, 13935.0], [57.4, 13936.0], [57.5, 13962.0], [57.6, 13977.0], [57.7, 13979.0], [57.8, 14034.0], [57.9, 14037.0], [58.0, 14042.0], [58.1, 14048.0], [58.2, 14049.0], [58.3, 14063.0], [58.4, 14094.0], [58.5, 14099.0], [58.6, 14103.0], [58.7, 14121.0], [58.8, 14123.0], [58.9, 14134.0], [59.0, 14138.0], [59.1, 14147.0], [59.2, 14177.0], [59.3, 14191.0], [59.4, 14194.0], [59.5, 14237.0], [59.6, 14245.0], [59.7, 14281.0], [59.8, 14286.0], [59.9, 14295.0], [60.0, 14305.0], [60.1, 14320.0], [60.2, 14327.0], [60.3, 14343.0], [60.4, 14380.0], [60.5, 14412.0], [60.6, 14426.0], [60.7, 14426.0], [60.8, 14490.0], [60.9, 14500.0], [61.0, 14573.0], [61.1, 14612.0], [61.2, 14616.0], [61.3, 14639.0], [61.4, 14651.0], [61.5, 14656.0], [61.6, 14659.0], [61.7, 14670.0], [61.8, 14682.0], [61.9, 14699.0], [62.0, 14707.0], [62.1, 14726.0], [62.2, 14729.0], [62.3, 14739.0], [62.4, 14767.0], [62.5, 14772.0], [62.6, 14775.0], [62.7, 14793.0], [62.8, 14793.0], [62.9, 14804.0], [63.0, 14805.0], [63.1, 14808.0], [63.2, 14820.0], [63.3, 14840.0], [63.4, 14848.0], [63.5, 14861.0], [63.6, 14874.0], [63.7, 14905.0], [63.8, 14907.0], [63.9, 14910.0], [64.0, 14912.0], [64.1, 14915.0], [64.2, 14915.0], [64.3, 14918.0], [64.4, 14919.0], [64.5, 14928.0], [64.6, 14932.0], [64.7, 14949.0], [64.8, 14984.0], [64.9, 15031.0], [65.0, 15041.0], [65.1, 15067.0], [65.2, 15074.0], [65.3, 15081.0], [65.4, 15081.0], [65.5, 15094.0], [65.6, 15103.0], [65.7, 15106.0], [65.8, 15114.0], [65.9, 15121.0], [66.0, 15122.0], [66.1, 15151.0], [66.2, 15162.0], [66.3, 15179.0], [66.4, 15196.0], [66.5, 15279.0], [66.6, 15300.0], [66.7, 15305.0], [66.8, 15312.0], [66.9, 15340.0], [67.0, 15362.0], [67.1, 15386.0], [67.2, 15420.0], [67.3, 15481.0], [67.4, 15552.0], [67.5, 15557.0], [67.6, 15595.0], [67.7, 15609.0], [67.8, 15614.0], [67.9, 15619.0], [68.0, 15633.0], [68.1, 15649.0], [68.2, 15679.0], [68.3, 15711.0], [68.4, 15738.0], [68.5, 15768.0], [68.6, 15796.0], [68.7, 15829.0], [68.8, 15835.0], [68.9, 15872.0], [69.0, 15875.0], [69.1, 15882.0], [69.2, 15906.0], [69.3, 15912.0], [69.4, 15921.0], [69.5, 15934.0], [69.6, 15934.0], [69.7, 15956.0], [69.8, 15999.0], [69.9, 16022.0], [70.0, 16023.0], [70.1, 16025.0], [70.2, 16055.0], [70.3, 16072.0], [70.4, 16076.0], [70.5, 16105.0], [70.6, 16151.0], [70.7, 16173.0], [70.8, 16184.0], [70.9, 16205.0], [71.0, 16255.0], [71.1, 16279.0], [71.2, 16328.0], [71.3, 16383.0], [71.4, 16410.0], [71.5, 16410.0], [71.6, 16451.0], [71.7, 16458.0], [71.8, 16462.0], [71.9, 16496.0], [72.0, 16514.0], [72.1, 16556.0], [72.2, 16719.0], [72.3, 21447.0], [72.4, 21489.0], [72.5, 21963.0], [72.6, 22006.0], [72.7, 22240.0], [72.8, 22338.0], [72.9, 22340.0], [73.0, 22351.0], [73.1, 22374.0], [73.2, 22437.0], [73.3, 22542.0], [73.4, 22641.0], [73.5, 22641.0], [73.6, 22655.0], [73.7, 22673.0], [73.8, 22673.0], [73.9, 22712.0], [74.0, 22714.0], [74.1, 22736.0], [74.2, 22736.0], [74.3, 22795.0], [74.4, 22796.0], [74.5, 22815.0], [74.6, 22829.0], [74.7, 22862.0], [74.8, 22875.0], [74.9, 22876.0], [75.0, 22930.0], [75.1, 22953.0], [75.2, 22986.0], [75.3, 23025.0], [75.4, 23031.0], [75.5, 23089.0], [75.6, 23094.0], [75.7, 23101.0], [75.8, 23105.0], [75.9, 23116.0], [76.0, 23131.0], [76.1, 23141.0], [76.2, 23153.0], [76.3, 23156.0], [76.4, 23186.0], [76.5, 23199.0], [76.6, 23245.0], [76.7, 23267.0], [76.8, 23294.0], [76.9, 23299.0], [77.0, 23367.0], [77.1, 23427.0], [77.2, 23435.0], [77.3, 23442.0], [77.4, 23453.0], [77.5, 23456.0], [77.6, 23460.0], [77.7, 23472.0], [77.8, 23480.0], [77.9, 23487.0], [78.0, 23604.0], [78.1, 23609.0], [78.2, 23632.0], [78.3, 23662.0], [78.4, 23701.0], [78.5, 23714.0], [78.6, 23717.0], [78.7, 23733.0], [78.8, 23784.0], [78.9, 23808.0], [79.0, 23811.0], [79.1, 23893.0], [79.2, 23923.0], [79.3, 23968.0], [79.4, 23990.0], [79.5, 23990.0], [79.6, 24027.0], [79.7, 24055.0], [79.8, 24094.0], [79.9, 24109.0], [80.0, 24229.0], [80.1, 24266.0], [80.2, 24316.0], [80.3, 24326.0], [80.4, 24340.0], [80.5, 24383.0], [80.6, 24396.0], [80.7, 24413.0], [80.8, 24423.0], [80.9, 24426.0], [81.0, 24426.0], [81.1, 24455.0], [81.2, 24501.0], [81.3, 24691.0], [81.4, 24718.0], [81.5, 24732.0], [81.6, 24752.0], [81.7, 24812.0], [81.8, 24833.0], [81.9, 24837.0], [82.0, 24850.0], [82.1, 24873.0], [82.2, 24882.0], [82.3, 24906.0], [82.4, 24936.0], [82.5, 24942.0], [82.6, 25003.0], [82.7, 25008.0], [82.8, 25053.0], [82.9, 25066.0], [83.0, 25072.0], [83.1, 25076.0], [83.2, 25089.0], [83.3, 25097.0], [83.4, 25162.0], [83.5, 25188.0], [83.6, 25206.0], [83.7, 25227.0], [83.8, 25232.0], [83.9, 25241.0], [84.0, 25273.0], [84.1, 25278.0], [84.2, 25299.0], [84.3, 25303.0], [84.4, 25307.0], [84.5, 25308.0], [84.6, 25319.0], [84.7, 25386.0], [84.8, 25423.0], [84.9, 25457.0], [85.0, 25461.0], [85.1, 25489.0], [85.2, 25498.0], [85.3, 25507.0], [85.4, 25514.0], [85.5, 25519.0], [85.6, 25523.0], [85.7, 25533.0], [85.8, 25557.0], [85.9, 25561.0], [86.0, 25566.0], [86.1, 25580.0], [86.2, 25581.0], [86.3, 25599.0], [86.4, 25641.0], [86.5, 25681.0], [86.6, 25721.0], [86.7, 25758.0], [86.8, 25766.0], [86.9, 25775.0], [87.0, 25798.0], [87.1, 25815.0], [87.2, 25861.0], [87.3, 25966.0], [87.4, 25977.0], [87.5, 25999.0], [87.6, 26019.0], [87.7, 26076.0], [87.8, 26097.0], [87.9, 26102.0], [88.0, 26117.0], [88.1, 26160.0], [88.2, 26178.0], [88.3, 26182.0], [88.4, 26187.0], [88.5, 26187.0], [88.6, 26199.0], [88.7, 26204.0], [88.8, 26209.0], [88.9, 26219.0], [89.0, 26237.0], [89.1, 26255.0], [89.2, 26263.0], [89.3, 26287.0], [89.4, 26387.0], [89.5, 26400.0], [89.6, 26423.0], [89.7, 26489.0], [89.8, 26500.0], [89.9, 26503.0], [90.0, 26505.0], [90.1, 26582.0], [90.2, 26587.0], [90.3, 26604.0], [90.4, 26662.0], [90.5, 26693.0], [90.6, 26761.0], [90.7, 26791.0], [90.8, 26795.0], [90.9, 26808.0], [91.0, 26824.0], [91.1, 26832.0], [91.2, 26921.0], [91.3, 26924.0], [91.4, 26968.0], [91.5, 26969.0], [91.6, 26982.0], [91.7, 26985.0], [91.8, 27007.0], [91.9, 27021.0], [92.0, 27025.0], [92.1, 27057.0], [92.2, 27071.0], [92.3, 27077.0], [92.4, 27079.0], [92.5, 27085.0], [92.6, 27087.0], [92.7, 27136.0], [92.8, 27156.0], [92.9, 27168.0], [93.0, 27194.0], [93.1, 27197.0], [93.2, 27202.0], [93.3, 27215.0], [93.4, 27218.0], [93.5, 27260.0], [93.6, 27281.0], [93.7, 27357.0], [93.8, 27359.0], [93.9, 27362.0], [94.0, 27364.0], [94.1, 27425.0], [94.2, 27426.0], [94.3, 27433.0], [94.4, 27440.0], [94.5, 27444.0], [94.6, 27465.0], [94.7, 27534.0], [94.8, 27553.0], [94.9, 27562.0], [95.0, 27612.0], [95.1, 27656.0], [95.2, 27692.0], [95.3, 27699.0], [95.4, 27699.0], [95.5, 27714.0], [95.6, 27752.0], [95.7, 27793.0], [95.8, 27810.0], [95.9, 27819.0], [96.0, 27827.0], [96.1, 27906.0], [96.2, 27918.0], [96.3, 27931.0], [96.4, 27939.0], [96.5, 27971.0], [96.6, 27984.0], [96.7, 27999.0], [96.8, 28330.0], [96.9, 28521.0], [97.0, 28880.0], [97.1, 28886.0], [97.2, 29119.0], [97.3, 29265.0], [97.4, 29280.0], [97.5, 29291.0], [97.6, 29296.0], [97.7, 29296.0], [97.8, 29344.0], [97.9, 29355.0], [98.0, 29412.0], [98.1, 29425.0], [98.2, 29429.0], [98.3, 29457.0], [98.4, 29556.0], [98.5, 29560.0], [98.6, 29560.0], [98.7, 29562.0], [98.8, 29639.0], [98.9, 29686.0], [99.0, 29714.0], [99.1, 29717.0], [99.2, 29757.0], [99.3, 29789.0], [99.4, 29907.0], [99.5, 29959.0], [99.6, 30090.0], [99.7, 30161.0], [99.8, 30494.0], [99.9, 51033.0]], "isOverall": false, "label": "create token", "isController": false}, {"data": [[0.0, 295.0], [0.1, 296.0], [0.2, 296.0], [0.3, 296.0], [0.4, 297.0], [0.5, 297.0], [0.6, 297.0], [0.7, 298.0], [0.8, 298.0], [0.9, 298.0], [1.0, 298.0], [1.1, 298.0], [1.2, 298.0], [1.3, 299.0], [1.4, 299.0], [1.5, 299.0], [1.6, 300.0], [1.7, 300.0], [1.8, 300.0], [1.9, 300.0], [2.0, 301.0], [2.1, 301.0], [2.2, 301.0], [2.3, 301.0], [2.4, 301.0], [2.5, 301.0], [2.6, 301.0], [2.7, 301.0], [2.8, 301.0], [2.9, 301.0], [3.0, 302.0], [3.1, 302.0], [3.2, 302.0], [3.3, 302.0], [3.4, 302.0], [3.5, 302.0], [3.6, 302.0], [3.7, 302.0], [3.8, 302.0], [3.9, 302.0], [4.0, 302.0], [4.1, 302.0], [4.2, 302.0], [4.3, 302.0], [4.4, 302.0], [4.5, 302.0], [4.6, 303.0], [4.7, 303.0], [4.8, 303.0], [4.9, 303.0], [5.0, 303.0], [5.1, 303.0], [5.2, 303.0], [5.3, 303.0], [5.4, 303.0], [5.5, 304.0], [5.6, 304.0], [5.7, 304.0], [5.8, 304.0], [5.9, 304.0], [6.0, 304.0], [6.1, 304.0], [6.2, 304.0], [6.3, 304.0], [6.4, 304.0], [6.5, 304.0], [6.6, 304.0], [6.7, 305.0], [6.8, 305.0], [6.9, 305.0], [7.0, 305.0], [7.1, 305.0], [7.2, 305.0], [7.3, 305.0], [7.4, 305.0], [7.5, 305.0], [7.6, 305.0], [7.7, 305.0], [7.8, 305.0], [7.9, 305.0], [8.0, 305.0], [8.1, 305.0], [8.2, 305.0], [8.3, 305.0], [8.4, 305.0], [8.5, 305.0], [8.6, 305.0], [8.7, 305.0], [8.8, 305.0], [8.9, 305.0], [9.0, 305.0], [9.1, 305.0], [9.2, 305.0], [9.3, 305.0], [9.4, 306.0], [9.5, 306.0], [9.6, 306.0], [9.7, 306.0], [9.8, 306.0], [9.9, 306.0], [10.0, 306.0], [10.1, 306.0], [10.2, 306.0], [10.3, 306.0], [10.4, 306.0], [10.5, 306.0], [10.6, 306.0], [10.7, 306.0], [10.8, 306.0], [10.9, 306.0], [11.0, 306.0], [11.1, 306.0], [11.2, 306.0], [11.3, 306.0], [11.4, 306.0], [11.5, 306.0], [11.6, 306.0], [11.7, 306.0], [11.8, 306.0], [11.9, 306.0], [12.0, 306.0], [12.1, 306.0], [12.2, 307.0], [12.3, 307.0], [12.4, 307.0], [12.5, 307.0], [12.6, 307.0], [12.7, 307.0], [12.8, 307.0], [12.9, 307.0], [13.0, 307.0], [13.1, 307.0], [13.2, 307.0], [13.3, 307.0], [13.4, 307.0], [13.5, 307.0], [13.6, 307.0], [13.7, 307.0], [13.8, 307.0], [13.9, 307.0], [14.0, 307.0], [14.1, 307.0], [14.2, 307.0], [14.3, 307.0], [14.4, 307.0], [14.5, 307.0], [14.6, 307.0], [14.7, 307.0], [14.8, 307.0], [14.9, 307.0], [15.0, 307.0], [15.1, 308.0], [15.2, 308.0], [15.3, 308.0], [15.4, 308.0], [15.5, 308.0], [15.6, 308.0], [15.7, 308.0], [15.8, 308.0], [15.9, 308.0], [16.0, 308.0], [16.1, 308.0], [16.2, 308.0], [16.3, 308.0], [16.4, 308.0], [16.5, 308.0], [16.6, 308.0], [16.7, 308.0], [16.8, 308.0], [16.9, 308.0], [17.0, 308.0], [17.1, 308.0], [17.2, 308.0], [17.3, 308.0], [17.4, 308.0], [17.5, 308.0], [17.6, 308.0], [17.7, 309.0], [17.8, 309.0], [17.9, 309.0], [18.0, 309.0], [18.1, 309.0], [18.2, 309.0], [18.3, 309.0], [18.4, 309.0], [18.5, 309.0], [18.6, 309.0], [18.7, 309.0], [18.8, 309.0], [18.9, 309.0], [19.0, 309.0], [19.1, 309.0], [19.2, 309.0], [19.3, 309.0], [19.4, 309.0], [19.5, 309.0], [19.6, 309.0], [19.7, 309.0], [19.8, 309.0], [19.9, 309.0], [20.0, 309.0], [20.1, 309.0], [20.2, 309.0], [20.3, 309.0], [20.4, 309.0], [20.5, 309.0], [20.6, 309.0], [20.7, 309.0], [20.8, 309.0], [20.9, 309.0], [21.0, 309.0], [21.1, 309.0], [21.2, 309.0], [21.3, 310.0], [21.4, 310.0], [21.5, 310.0], [21.6, 310.0], [21.7, 310.0], [21.8, 310.0], [21.9, 310.0], [22.0, 310.0], [22.1, 310.0], [22.2, 310.0], [22.3, 310.0], [22.4, 310.0], [22.5, 310.0], [22.6, 310.0], [22.7, 310.0], [22.8, 310.0], [22.9, 310.0], [23.0, 310.0], [23.1, 310.0], [23.2, 310.0], [23.3, 310.0], [23.4, 310.0], [23.5, 310.0], [23.6, 310.0], [23.7, 310.0], [23.8, 310.0], [23.9, 310.0], [24.0, 310.0], [24.1, 310.0], [24.2, 310.0], [24.3, 310.0], [24.4, 310.0], [24.5, 310.0], [24.6, 310.0], [24.7, 310.0], [24.8, 310.0], [24.9, 310.0], [25.0, 310.0], [25.1, 310.0], [25.2, 310.0], [25.3, 310.0], [25.4, 310.0], [25.5, 310.0], [25.6, 310.0], [25.7, 310.0], [25.8, 311.0], [25.9, 311.0], [26.0, 311.0], [26.1, 311.0], [26.2, 311.0], [26.3, 311.0], [26.4, 311.0], [26.5, 311.0], [26.6, 311.0], [26.7, 311.0], [26.8, 311.0], [26.9, 311.0], [27.0, 311.0], [27.1, 311.0], [27.2, 311.0], [27.3, 311.0], [27.4, 311.0], [27.5, 311.0], [27.6, 311.0], [27.7, 311.0], [27.8, 311.0], [27.9, 311.0], [28.0, 311.0], [28.1, 311.0], [28.2, 311.0], [28.3, 311.0], [28.4, 311.0], [28.5, 311.0], [28.6, 311.0], [28.7, 311.0], [28.8, 311.0], [28.9, 311.0], [29.0, 311.0], [29.1, 311.0], [29.2, 311.0], [29.3, 311.0], [29.4, 311.0], [29.5, 311.0], [29.6, 311.0], [29.7, 311.0], [29.8, 312.0], [29.9, 312.0], [30.0, 312.0], [30.1, 312.0], [30.2, 312.0], [30.3, 312.0], [30.4, 312.0], [30.5, 312.0], [30.6, 312.0], [30.7, 312.0], [30.8, 312.0], [30.9, 312.0], [31.0, 312.0], [31.1, 312.0], [31.2, 312.0], [31.3, 312.0], [31.4, 312.0], [31.5, 312.0], [31.6, 312.0], [31.7, 312.0], [31.8, 312.0], [31.9, 312.0], [32.0, 312.0], [32.1, 312.0], [32.2, 312.0], [32.3, 312.0], [32.4, 312.0], [32.5, 312.0], [32.6, 312.0], [32.7, 312.0], [32.8, 312.0], [32.9, 312.0], [33.0, 312.0], [33.1, 312.0], [33.2, 313.0], [33.3, 313.0], [33.4, 313.0], [33.5, 313.0], [33.6, 313.0], [33.7, 313.0], [33.8, 313.0], [33.9, 313.0], [34.0, 313.0], [34.1, 313.0], [34.2, 313.0], [34.3, 313.0], [34.4, 313.0], [34.5, 313.0], [34.6, 313.0], [34.7, 313.0], [34.8, 313.0], [34.9, 313.0], [35.0, 313.0], [35.1, 313.0], [35.2, 313.0], [35.3, 313.0], [35.4, 313.0], [35.5, 313.0], [35.6, 313.0], [35.7, 313.0], [35.8, 313.0], [35.9, 313.0], [36.0, 314.0], [36.1, 314.0], [36.2, 314.0], [36.3, 314.0], [36.4, 314.0], [36.5, 314.0], [36.6, 314.0], [36.7, 314.0], [36.8, 314.0], [36.9, 314.0], [37.0, 314.0], [37.1, 314.0], [37.2, 314.0], [37.3, 314.0], [37.4, 314.0], [37.5, 314.0], [37.6, 314.0], [37.7, 314.0], [37.8, 314.0], [37.9, 314.0], [38.0, 314.0], [38.1, 314.0], [38.2, 314.0], [38.3, 314.0], [38.4, 314.0], [38.5, 314.0], [38.6, 314.0], [38.7, 315.0], [38.8, 315.0], [38.9, 315.0], [39.0, 315.0], [39.1, 315.0], [39.2, 315.0], [39.3, 315.0], [39.4, 315.0], [39.5, 315.0], [39.6, 315.0], [39.7, 315.0], [39.8, 315.0], [39.9, 315.0], [40.0, 315.0], [40.1, 315.0], [40.2, 315.0], [40.3, 315.0], [40.4, 315.0], [40.5, 315.0], [40.6, 315.0], [40.7, 315.0], [40.8, 315.0], [40.9, 315.0], [41.0, 315.0], [41.1, 315.0], [41.2, 315.0], [41.3, 315.0], [41.4, 315.0], [41.5, 316.0], [41.6, 316.0], [41.7, 316.0], [41.8, 316.0], [41.9, 316.0], [42.0, 316.0], [42.1, 316.0], [42.2, 316.0], [42.3, 316.0], [42.4, 316.0], [42.5, 316.0], [42.6, 316.0], [42.7, 316.0], [42.8, 316.0], [42.9, 316.0], [43.0, 316.0], [43.1, 316.0], [43.2, 316.0], [43.3, 316.0], [43.4, 317.0], [43.5, 317.0], [43.6, 317.0], [43.7, 317.0], [43.8, 317.0], [43.9, 317.0], [44.0, 317.0], [44.1, 317.0], [44.2, 317.0], [44.3, 317.0], [44.4, 317.0], [44.5, 317.0], [44.6, 317.0], [44.7, 317.0], [44.8, 317.0], [44.9, 317.0], [45.0, 317.0], [45.1, 317.0], [45.2, 317.0], [45.3, 317.0], [45.4, 317.0], [45.5, 317.0], [45.6, 318.0], [45.7, 318.0], [45.8, 318.0], [45.9, 318.0], [46.0, 318.0], [46.1, 318.0], [46.2, 318.0], [46.3, 318.0], [46.4, 318.0], [46.5, 318.0], [46.6, 318.0], [46.7, 318.0], [46.8, 318.0], [46.9, 318.0], [47.0, 318.0], [47.1, 318.0], [47.2, 318.0], [47.3, 318.0], [47.4, 318.0], [47.5, 318.0], [47.6, 318.0], [47.7, 318.0], [47.8, 318.0], [47.9, 318.0], [48.0, 318.0], [48.1, 318.0], [48.2, 318.0], [48.3, 318.0], [48.4, 318.0], [48.5, 319.0], [48.6, 319.0], [48.7, 319.0], [48.8, 319.0], [48.9, 319.0], [49.0, 319.0], [49.1, 319.0], [49.2, 319.0], [49.3, 319.0], [49.4, 319.0], [49.5, 319.0], [49.6, 319.0], [49.7, 319.0], [49.8, 319.0], [49.9, 319.0], [50.0, 319.0], [50.1, 319.0], [50.2, 319.0], [50.3, 319.0], [50.4, 319.0], [50.5, 319.0], [50.6, 319.0], [50.7, 319.0], [50.8, 320.0], [50.9, 320.0], [51.0, 320.0], [51.1, 320.0], [51.2, 320.0], [51.3, 320.0], [51.4, 320.0], [51.5, 320.0], [51.6, 320.0], [51.7, 320.0], [51.8, 320.0], [51.9, 320.0], [52.0, 320.0], [52.1, 321.0], [52.2, 321.0], [52.3, 321.0], [52.4, 321.0], [52.5, 321.0], [52.6, 321.0], [52.7, 321.0], [52.8, 321.0], [52.9, 321.0], [53.0, 321.0], [53.1, 321.0], [53.2, 321.0], [53.3, 321.0], [53.4, 321.0], [53.5, 321.0], [53.6, 321.0], [53.7, 321.0], [53.8, 321.0], [53.9, 321.0], [54.0, 321.0], [54.1, 321.0], [54.2, 321.0], [54.3, 322.0], [54.4, 322.0], [54.5, 322.0], [54.6, 322.0], [54.7, 322.0], [54.8, 322.0], [54.9, 322.0], [55.0, 322.0], [55.1, 322.0], [55.2, 322.0], [55.3, 322.0], [55.4, 322.0], [55.5, 322.0], [55.6, 322.0], [55.7, 323.0], [55.8, 323.0], [55.9, 323.0], [56.0, 323.0], [56.1, 323.0], [56.2, 323.0], [56.3, 323.0], [56.4, 323.0], [56.5, 323.0], [56.6, 323.0], [56.7, 324.0], [56.8, 324.0], [56.9, 324.0], [57.0, 324.0], [57.1, 324.0], [57.2, 324.0], [57.3, 324.0], [57.4, 324.0], [57.5, 324.0], [57.6, 324.0], [57.7, 324.0], [57.8, 324.0], [57.9, 324.0], [58.0, 324.0], [58.1, 324.0], [58.2, 325.0], [58.3, 325.0], [58.4, 325.0], [58.5, 325.0], [58.6, 325.0], [58.7, 325.0], [58.8, 325.0], [58.9, 326.0], [59.0, 326.0], [59.1, 326.0], [59.2, 326.0], [59.3, 326.0], [59.4, 326.0], [59.5, 326.0], [59.6, 326.0], [59.7, 326.0], [59.8, 326.0], [59.9, 327.0], [60.0, 327.0], [60.1, 327.0], [60.2, 327.0], [60.3, 328.0], [60.4, 328.0], [60.5, 328.0], [60.6, 328.0], [60.7, 328.0], [60.8, 328.0], [60.9, 328.0], [61.0, 328.0], [61.1, 328.0], [61.2, 328.0], [61.3, 329.0], [61.4, 329.0], [61.5, 329.0], [61.6, 329.0], [61.7, 329.0], [61.8, 329.0], [61.9, 329.0], [62.0, 330.0], [62.1, 330.0], [62.2, 330.0], [62.3, 331.0], [62.4, 331.0], [62.5, 331.0], [62.6, 331.0], [62.7, 331.0], [62.8, 332.0], [62.9, 332.0], [63.0, 332.0], [63.1, 332.0], [63.2, 332.0], [63.3, 332.0], [63.4, 332.0], [63.5, 333.0], [63.6, 334.0], [63.7, 334.0], [63.8, 334.0], [63.9, 334.0], [64.0, 335.0], [64.1, 335.0], [64.2, 336.0], [64.3, 336.0], [64.4, 336.0], [64.5, 337.0], [64.6, 337.0], [64.7, 337.0], [64.8, 337.0], [64.9, 337.0], [65.0, 337.0], [65.1, 339.0], [65.2, 339.0], [65.3, 339.0], [65.4, 339.0], [65.5, 340.0], [65.6, 340.0], [65.7, 340.0], [65.8, 340.0], [65.9, 340.0], [66.0, 341.0], [66.1, 342.0], [66.2, 342.0], [66.3, 343.0], [66.4, 343.0], [66.5, 344.0], [66.6, 344.0], [66.7, 344.0], [66.8, 344.0], [66.9, 344.0], [67.0, 344.0], [67.1, 344.0], [67.2, 344.0], [67.3, 345.0], [67.4, 345.0], [67.5, 345.0], [67.6, 346.0], [67.7, 346.0], [67.8, 346.0], [67.9, 346.0], [68.0, 346.0], [68.1, 346.0], [68.2, 347.0], [68.3, 347.0], [68.4, 347.0], [68.5, 347.0], [68.6, 347.0], [68.7, 347.0], [68.8, 348.0], [68.9, 348.0], [69.0, 348.0], [69.1, 349.0], [69.2, 349.0], [69.3, 349.0], [69.4, 349.0], [69.5, 349.0], [69.6, 350.0], [69.7, 350.0], [69.8, 350.0], [69.9, 350.0], [70.0, 350.0], [70.1, 351.0], [70.2, 351.0], [70.3, 351.0], [70.4, 351.0], [70.5, 352.0], [70.6, 352.0], [70.7, 352.0], [70.8, 352.0], [70.9, 353.0], [71.0, 354.0], [71.1, 354.0], [71.2, 354.0], [71.3, 354.0], [71.4, 355.0], [71.5, 355.0], [71.6, 355.0], [71.7, 355.0], [71.8, 355.0], [71.9, 355.0], [72.0, 356.0], [72.1, 356.0], [72.2, 356.0], [72.3, 356.0], [72.4, 357.0], [72.5, 357.0], [72.6, 357.0], [72.7, 358.0], [72.8, 358.0], [72.9, 358.0], [73.0, 359.0], [73.1, 360.0], [73.2, 360.0], [73.3, 360.0], [73.4, 360.0], [73.5, 361.0], [73.6, 361.0], [73.7, 362.0], [73.8, 362.0], [73.9, 362.0], [74.0, 362.0], [74.1, 363.0], [74.2, 363.0], [74.3, 363.0], [74.4, 364.0], [74.5, 364.0], [74.6, 365.0], [74.7, 365.0], [74.8, 365.0], [74.9, 366.0], [75.0, 367.0], [75.1, 368.0], [75.2, 368.0], [75.3, 368.0], [75.4, 368.0], [75.5, 368.0], [75.6, 369.0], [75.7, 370.0], [75.8, 370.0], [75.9, 370.0], [76.0, 370.0], [76.1, 371.0], [76.2, 371.0], [76.3, 371.0], [76.4, 371.0], [76.5, 372.0], [76.6, 372.0], [76.7, 372.0], [76.8, 373.0], [76.9, 373.0], [77.0, 374.0], [77.1, 374.0], [77.2, 375.0], [77.3, 375.0], [77.4, 375.0], [77.5, 375.0], [77.6, 375.0], [77.7, 375.0], [77.8, 375.0], [77.9, 376.0], [78.0, 377.0], [78.1, 377.0], [78.2, 378.0], [78.3, 378.0], [78.4, 378.0], [78.5, 378.0], [78.6, 378.0], [78.7, 379.0], [78.8, 380.0], [78.9, 380.0], [79.0, 380.0], [79.1, 380.0], [79.2, 380.0], [79.3, 380.0], [79.4, 380.0], [79.5, 380.0], [79.6, 381.0], [79.7, 381.0], [79.8, 381.0], [79.9, 381.0], [80.0, 381.0], [80.1, 381.0], [80.2, 382.0], [80.3, 382.0], [80.4, 382.0], [80.5, 382.0], [80.6, 382.0], [80.7, 382.0], [80.8, 383.0], [80.9, 383.0], [81.0, 383.0], [81.1, 383.0], [81.2, 383.0], [81.3, 383.0], [81.4, 383.0], [81.5, 383.0], [81.6, 384.0], [81.7, 384.0], [81.8, 384.0], [81.9, 384.0], [82.0, 384.0], [82.1, 384.0], [82.2, 384.0], [82.3, 384.0], [82.4, 384.0], [82.5, 384.0], [82.6, 385.0], [82.7, 385.0], [82.8, 385.0], [82.9, 386.0], [83.0, 386.0], [83.1, 387.0], [83.2, 387.0], [83.3, 387.0], [83.4, 387.0], [83.5, 388.0], [83.6, 388.0], [83.7, 388.0], [83.8, 388.0], [83.9, 388.0], [84.0, 389.0], [84.1, 389.0], [84.2, 389.0], [84.3, 389.0], [84.4, 389.0], [84.5, 390.0], [84.6, 390.0], [84.7, 390.0], [84.8, 390.0], [84.9, 391.0], [85.0, 391.0], [85.1, 391.0], [85.2, 391.0], [85.3, 391.0], [85.4, 391.0], [85.5, 392.0], [85.6, 392.0], [85.7, 392.0], [85.8, 392.0], [85.9, 392.0], [86.0, 393.0], [86.1, 393.0], [86.2, 393.0], [86.3, 394.0], [86.4, 394.0], [86.5, 394.0], [86.6, 395.0], [86.7, 395.0], [86.8, 395.0], [86.9, 395.0], [87.0, 396.0], [87.1, 396.0], [87.2, 396.0], [87.3, 397.0], [87.4, 397.0], [87.5, 398.0], [87.6, 399.0], [87.7, 399.0], [87.8, 399.0], [87.9, 400.0], [88.0, 400.0], [88.1, 400.0], [88.2, 400.0], [88.3, 400.0], [88.4, 401.0], [88.5, 401.0], [88.6, 401.0], [88.7, 401.0], [88.8, 403.0], [88.9, 403.0], [89.0, 403.0], [89.1, 404.0], [89.2, 405.0], [89.3, 405.0], [89.4, 405.0], [89.5, 405.0], [89.6, 406.0], [89.7, 407.0], [89.8, 407.0], [89.9, 408.0], [90.0, 409.0], [90.1, 409.0], [90.2, 409.0], [90.3, 410.0], [90.4, 410.0], [90.5, 411.0], [90.6, 411.0], [90.7, 412.0], [90.8, 412.0], [90.9, 414.0], [91.0, 415.0], [91.1, 415.0], [91.2, 415.0], [91.3, 416.0], [91.4, 419.0], [91.5, 420.0], [91.6, 421.0], [91.7, 421.0], [91.8, 422.0], [91.9, 425.0], [92.0, 425.0], [92.1, 426.0], [92.2, 426.0], [92.3, 432.0], [92.4, 438.0], [92.5, 442.0], [92.6, 612.0], [92.7, 627.0], [92.8, 638.0], [92.9, 842.0], [93.0, 1049.0], [93.1, 1153.0], [93.2, 1156.0], [93.3, 1162.0], [93.4, 1168.0], [93.5, 1171.0], [93.6, 1178.0], [93.7, 1182.0], [93.8, 1204.0], [93.9, 1214.0], [94.0, 1214.0], [94.1, 1220.0], [94.2, 1224.0], [94.3, 1236.0], [94.4, 1239.0], [94.5, 1242.0], [94.6, 1250.0], [94.7, 1253.0], [94.8, 1261.0], [94.9, 1262.0], [95.0, 1279.0], [95.1, 1285.0], [95.2, 1293.0], [95.3, 1294.0], [95.4, 1299.0], [95.5, 1303.0], [95.6, 1322.0], [95.7, 1325.0], [95.8, 1334.0], [95.9, 1369.0], [96.0, 1374.0], [96.1, 1381.0], [96.2, 1385.0], [96.3, 1402.0], [96.4, 1403.0], [96.5, 1416.0], [96.6, 1420.0], [96.7, 1422.0], [96.8, 1423.0], [96.9, 1428.0], [97.0, 1429.0], [97.1, 1444.0], [97.2, 1446.0], [97.3, 1448.0], [97.4, 1472.0], [97.5, 1473.0], [97.6, 1474.0], [97.7, 1513.0], [97.8, 1533.0], [97.9, 1895.0], [98.0, 1902.0], [98.1, 2201.0], [98.2, 2227.0], [98.3, 2245.0], [98.4, 2280.0], [98.5, 2287.0], [98.6, 2300.0], [98.7, 2304.0], [98.8, 2335.0], [98.9, 2340.0], [99.0, 2345.0], [99.1, 2360.0], [99.2, 2366.0], [99.3, 2405.0], [99.4, 2414.0], [99.5, 2474.0], [99.6, 2491.0], [99.7, 2881.0], [99.8, 3915.0], [99.9, 4679.0]], "isOverall": false, "label": "create booking", "isController": false}, {"data": [[0.0, 297.0], [0.1, 299.0], [0.2, 301.0], [0.3, 301.0], [0.4, 301.0], [0.5, 301.0], [0.6, 301.0], [0.7, 302.0], [0.8, 302.0], [0.9, 302.0], [1.0, 302.0], [1.1, 303.0], [1.2, 303.0], [1.3, 303.0], [1.4, 303.0], [1.5, 304.0], [1.6, 304.0], [1.7, 304.0], [1.8, 304.0], [1.9, 304.0], [2.0, 304.0], [2.1, 304.0], [2.2, 304.0], [2.3, 304.0], [2.4, 304.0], [2.5, 305.0], [2.6, 305.0], [2.7, 305.0], [2.8, 305.0], [2.9, 305.0], [3.0, 305.0], [3.1, 305.0], [3.2, 305.0], [3.3, 305.0], [3.4, 305.0], [3.5, 306.0], [3.6, 306.0], [3.7, 306.0], [3.8, 306.0], [3.9, 306.0], [4.0, 306.0], [4.1, 306.0], [4.2, 306.0], [4.3, 306.0], [4.4, 306.0], [4.5, 306.0], [4.6, 306.0], [4.7, 307.0], [4.8, 307.0], [4.9, 307.0], [5.0, 307.0], [5.1, 307.0], [5.2, 307.0], [5.3, 307.0], [5.4, 307.0], [5.5, 307.0], [5.6, 307.0], [5.7, 307.0], [5.8, 307.0], [5.9, 307.0], [6.0, 307.0], [6.1, 307.0], [6.2, 307.0], [6.3, 307.0], [6.4, 307.0], [6.5, 308.0], [6.6, 308.0], [6.7, 308.0], [6.8, 308.0], [6.9, 308.0], [7.0, 308.0], [7.1, 308.0], [7.2, 308.0], [7.3, 308.0], [7.4, 308.0], [7.5, 308.0], [7.6, 308.0], [7.7, 308.0], [7.8, 308.0], [7.9, 308.0], [8.0, 308.0], [8.1, 308.0], [8.2, 308.0], [8.3, 308.0], [8.4, 308.0], [8.5, 308.0], [8.6, 308.0], [8.7, 309.0], [8.8, 309.0], [8.9, 309.0], [9.0, 309.0], [9.1, 309.0], [9.2, 309.0], [9.3, 309.0], [9.4, 309.0], [9.5, 309.0], [9.6, 309.0], [9.7, 309.0], [9.8, 309.0], [9.9, 309.0], [10.0, 309.0], [10.1, 309.0], [10.2, 309.0], [10.3, 309.0], [10.4, 309.0], [10.5, 309.0], [10.6, 309.0], [10.7, 309.0], [10.8, 309.0], [10.9, 309.0], [11.0, 309.0], [11.1, 310.0], [11.2, 310.0], [11.3, 310.0], [11.4, 310.0], [11.5, 310.0], [11.6, 310.0], [11.7, 310.0], [11.8, 310.0], [11.9, 310.0], [12.0, 310.0], [12.1, 310.0], [12.2, 310.0], [12.3, 310.0], [12.4, 310.0], [12.5, 310.0], [12.6, 310.0], [12.7, 310.0], [12.8, 310.0], [12.9, 310.0], [13.0, 310.0], [13.1, 310.0], [13.2, 310.0], [13.3, 310.0], [13.4, 310.0], [13.5, 310.0], [13.6, 311.0], [13.7, 311.0], [13.8, 311.0], [13.9, 311.0], [14.0, 311.0], [14.1, 311.0], [14.2, 311.0], [14.3, 311.0], [14.4, 311.0], [14.5, 311.0], [14.6, 311.0], [14.7, 311.0], [14.8, 311.0], [14.9, 311.0], [15.0, 311.0], [15.1, 311.0], [15.2, 311.0], [15.3, 311.0], [15.4, 311.0], [15.5, 311.0], [15.6, 311.0], [15.7, 311.0], [15.8, 311.0], [15.9, 311.0], [16.0, 312.0], [16.1, 312.0], [16.2, 312.0], [16.3, 312.0], [16.4, 312.0], [16.5, 312.0], [16.6, 312.0], [16.7, 312.0], [16.8, 312.0], [16.9, 312.0], [17.0, 312.0], [17.1, 312.0], [17.2, 312.0], [17.3, 312.0], [17.4, 312.0], [17.5, 312.0], [17.6, 313.0], [17.7, 313.0], [17.8, 313.0], [17.9, 313.0], [18.0, 313.0], [18.1, 313.0], [18.2, 313.0], [18.3, 313.0], [18.4, 313.0], [18.5, 313.0], [18.6, 313.0], [18.7, 313.0], [18.8, 313.0], [18.9, 313.0], [19.0, 313.0], [19.1, 313.0], [19.2, 313.0], [19.3, 313.0], [19.4, 313.0], [19.5, 313.0], [19.6, 313.0], [19.7, 313.0], [19.8, 313.0], [19.9, 313.0], [20.0, 313.0], [20.1, 313.0], [20.2, 313.0], [20.3, 313.0], [20.4, 313.0], [20.5, 314.0], [20.6, 314.0], [20.7, 314.0], [20.8, 314.0], [20.9, 314.0], [21.0, 314.0], [21.1, 314.0], [21.2, 314.0], [21.3, 314.0], [21.4, 314.0], [21.5, 314.0], [21.6, 314.0], [21.7, 314.0], [21.8, 314.0], [21.9, 314.0], [22.0, 314.0], [22.1, 314.0], [22.2, 314.0], [22.3, 314.0], [22.4, 314.0], [22.5, 314.0], [22.6, 314.0], [22.7, 314.0], [22.8, 314.0], [22.9, 314.0], [23.0, 314.0], [23.1, 314.0], [23.2, 314.0], [23.3, 314.0], [23.4, 314.0], [23.5, 314.0], [23.6, 314.0], [23.7, 314.0], [23.8, 314.0], [23.9, 314.0], [24.0, 314.0], [24.1, 314.0], [24.2, 314.0], [24.3, 314.0], [24.4, 314.0], [24.5, 314.0], [24.6, 315.0], [24.7, 315.0], [24.8, 315.0], [24.9, 315.0], [25.0, 315.0], [25.1, 315.0], [25.2, 315.0], [25.3, 315.0], [25.4, 315.0], [25.5, 315.0], [25.6, 315.0], [25.7, 315.0], [25.8, 315.0], [25.9, 315.0], [26.0, 315.0], [26.1, 315.0], [26.2, 315.0], [26.3, 315.0], [26.4, 315.0], [26.5, 316.0], [26.6, 316.0], [26.7, 316.0], [26.8, 316.0], [26.9, 316.0], [27.0, 316.0], [27.1, 316.0], [27.2, 316.0], [27.3, 316.0], [27.4, 316.0], [27.5, 316.0], [27.6, 316.0], [27.7, 316.0], [27.8, 316.0], [27.9, 316.0], [28.0, 316.0], [28.1, 316.0], [28.2, 316.0], [28.3, 316.0], [28.4, 316.0], [28.5, 316.0], [28.6, 316.0], [28.7, 316.0], [28.8, 316.0], [28.9, 316.0], [29.0, 316.0], [29.1, 316.0], [29.2, 316.0], [29.3, 316.0], [29.4, 316.0], [29.5, 317.0], [29.6, 317.0], [29.7, 317.0], [29.8, 317.0], [29.9, 317.0], [30.0, 317.0], [30.1, 317.0], [30.2, 317.0], [30.3, 317.0], [30.4, 317.0], [30.5, 317.0], [30.6, 317.0], [30.7, 317.0], [30.8, 317.0], [30.9, 317.0], [31.0, 317.0], [31.1, 317.0], [31.2, 317.0], [31.3, 317.0], [31.4, 317.0], [31.5, 317.0], [31.6, 317.0], [31.7, 317.0], [31.8, 318.0], [31.9, 318.0], [32.0, 318.0], [32.1, 318.0], [32.2, 318.0], [32.3, 318.0], [32.4, 318.0], [32.5, 318.0], [32.6, 318.0], [32.7, 318.0], [32.8, 318.0], [32.9, 318.0], [33.0, 318.0], [33.1, 318.0], [33.2, 318.0], [33.3, 318.0], [33.4, 318.0], [33.5, 318.0], [33.6, 318.0], [33.7, 318.0], [33.8, 318.0], [33.9, 318.0], [34.0, 318.0], [34.1, 318.0], [34.2, 318.0], [34.3, 318.0], [34.4, 318.0], [34.5, 318.0], [34.6, 318.0], [34.7, 319.0], [34.8, 319.0], [34.9, 319.0], [35.0, 319.0], [35.1, 319.0], [35.2, 319.0], [35.3, 319.0], [35.4, 319.0], [35.5, 319.0], [35.6, 319.0], [35.7, 319.0], [35.8, 319.0], [35.9, 319.0], [36.0, 319.0], [36.1, 319.0], [36.2, 319.0], [36.3, 319.0], [36.4, 319.0], [36.5, 319.0], [36.6, 319.0], [36.7, 319.0], [36.8, 319.0], [36.9, 319.0], [37.0, 319.0], [37.1, 319.0], [37.2, 319.0], [37.3, 319.0], [37.4, 320.0], [37.5, 320.0], [37.6, 320.0], [37.7, 320.0], [37.8, 320.0], [37.9, 320.0], [38.0, 320.0], [38.1, 320.0], [38.2, 320.0], [38.3, 320.0], [38.4, 320.0], [38.5, 320.0], [38.6, 320.0], [38.7, 320.0], [38.8, 320.0], [38.9, 320.0], [39.0, 320.0], [39.1, 320.0], [39.2, 320.0], [39.3, 320.0], [39.4, 320.0], [39.5, 320.0], [39.6, 320.0], [39.7, 320.0], [39.8, 320.0], [39.9, 320.0], [40.0, 320.0], [40.1, 320.0], [40.2, 320.0], [40.3, 320.0], [40.4, 320.0], [40.5, 320.0], [40.6, 321.0], [40.7, 321.0], [40.8, 321.0], [40.9, 321.0], [41.0, 321.0], [41.1, 321.0], [41.2, 321.0], [41.3, 321.0], [41.4, 321.0], [41.5, 321.0], [41.6, 321.0], [41.7, 321.0], [41.8, 321.0], [41.9, 321.0], [42.0, 321.0], [42.1, 321.0], [42.2, 321.0], [42.3, 321.0], [42.4, 321.0], [42.5, 321.0], [42.6, 321.0], [42.7, 321.0], [42.8, 321.0], [42.9, 321.0], [43.0, 321.0], [43.1, 322.0], [43.2, 322.0], [43.3, 322.0], [43.4, 322.0], [43.5, 322.0], [43.6, 322.0], [43.7, 322.0], [43.8, 322.0], [43.9, 322.0], [44.0, 322.0], [44.1, 322.0], [44.2, 322.0], [44.3, 322.0], [44.4, 322.0], [44.5, 322.0], [44.6, 322.0], [44.7, 322.0], [44.8, 322.0], [44.9, 322.0], [45.0, 322.0], [45.1, 323.0], [45.2, 323.0], [45.3, 323.0], [45.4, 323.0], [45.5, 323.0], [45.6, 323.0], [45.7, 323.0], [45.8, 323.0], [45.9, 323.0], [46.0, 323.0], [46.1, 323.0], [46.2, 323.0], [46.3, 323.0], [46.4, 323.0], [46.5, 323.0], [46.6, 323.0], [46.7, 323.0], [46.8, 323.0], [46.9, 323.0], [47.0, 323.0], [47.1, 323.0], [47.2, 323.0], [47.3, 323.0], [47.4, 323.0], [47.5, 324.0], [47.6, 324.0], [47.7, 324.0], [47.8, 324.0], [47.9, 324.0], [48.0, 324.0], [48.1, 324.0], [48.2, 324.0], [48.3, 324.0], [48.4, 324.0], [48.5, 324.0], [48.6, 324.0], [48.7, 324.0], [48.8, 324.0], [48.9, 324.0], [49.0, 324.0], [49.1, 324.0], [49.2, 324.0], [49.3, 324.0], [49.4, 324.0], [49.5, 324.0], [49.6, 324.0], [49.7, 324.0], [49.8, 324.0], [49.9, 324.0], [50.0, 325.0], [50.1, 325.0], [50.2, 325.0], [50.3, 325.0], [50.4, 325.0], [50.5, 325.0], [50.6, 325.0], [50.7, 325.0], [50.8, 325.0], [50.9, 325.0], [51.0, 325.0], [51.1, 325.0], [51.2, 325.0], [51.3, 325.0], [51.4, 325.0], [51.5, 325.0], [51.6, 326.0], [51.7, 326.0], [51.8, 326.0], [51.9, 326.0], [52.0, 326.0], [52.1, 326.0], [52.2, 326.0], [52.3, 326.0], [52.4, 326.0], [52.5, 326.0], [52.6, 326.0], [52.7, 326.0], [52.8, 326.0], [52.9, 326.0], [53.0, 326.0], [53.1, 326.0], [53.2, 326.0], [53.3, 327.0], [53.4, 327.0], [53.5, 327.0], [53.6, 327.0], [53.7, 327.0], [53.8, 327.0], [53.9, 327.0], [54.0, 327.0], [54.1, 327.0], [54.2, 327.0], [54.3, 327.0], [54.4, 328.0], [54.5, 328.0], [54.6, 328.0], [54.7, 328.0], [54.8, 328.0], [54.9, 328.0], [55.0, 328.0], [55.1, 328.0], [55.2, 328.0], [55.3, 328.0], [55.4, 328.0], [55.5, 328.0], [55.6, 328.0], [55.7, 328.0], [55.8, 329.0], [55.9, 329.0], [56.0, 329.0], [56.1, 329.0], [56.2, 329.0], [56.3, 329.0], [56.4, 329.0], [56.5, 329.0], [56.6, 329.0], [56.7, 329.0], [56.8, 329.0], [56.9, 329.0], [57.0, 330.0], [57.1, 330.0], [57.2, 330.0], [57.3, 330.0], [57.4, 330.0], [57.5, 330.0], [57.6, 330.0], [57.7, 330.0], [57.8, 330.0], [57.9, 330.0], [58.0, 330.0], [58.1, 331.0], [58.2, 331.0], [58.3, 331.0], [58.4, 331.0], [58.5, 331.0], [58.6, 332.0], [58.7, 332.0], [58.8, 332.0], [58.9, 332.0], [59.0, 332.0], [59.1, 332.0], [59.2, 332.0], [59.3, 332.0], [59.4, 332.0], [59.5, 332.0], [59.6, 332.0], [59.7, 332.0], [59.8, 332.0], [59.9, 333.0], [60.0, 333.0], [60.1, 333.0], [60.2, 333.0], [60.3, 333.0], [60.4, 333.0], [60.5, 333.0], [60.6, 334.0], [60.7, 334.0], [60.8, 334.0], [60.9, 334.0], [61.0, 334.0], [61.1, 334.0], [61.2, 335.0], [61.3, 335.0], [61.4, 335.0], [61.5, 335.0], [61.6, 335.0], [61.7, 335.0], [61.8, 335.0], [61.9, 335.0], [62.0, 336.0], [62.1, 336.0], [62.2, 336.0], [62.3, 336.0], [62.4, 336.0], [62.5, 336.0], [62.6, 336.0], [62.7, 336.0], [62.8, 337.0], [62.9, 338.0], [63.0, 338.0], [63.1, 338.0], [63.2, 338.0], [63.3, 338.0], [63.4, 338.0], [63.5, 338.0], [63.6, 338.0], [63.7, 339.0], [63.8, 339.0], [63.9, 339.0], [64.0, 341.0], [64.1, 341.0], [64.2, 341.0], [64.3, 341.0], [64.4, 342.0], [64.5, 342.0], [64.6, 342.0], [64.7, 343.0], [64.8, 343.0], [64.9, 343.0], [65.0, 343.0], [65.1, 343.0], [65.2, 344.0], [65.3, 344.0], [65.4, 344.0], [65.5, 345.0], [65.6, 346.0], [65.7, 346.0], [65.8, 346.0], [65.9, 347.0], [66.0, 348.0], [66.1, 348.0], [66.2, 348.0], [66.3, 349.0], [66.4, 349.0], [66.5, 349.0], [66.6, 349.0], [66.7, 349.0], [66.8, 350.0], [66.9, 350.0], [67.0, 350.0], [67.1, 350.0], [67.2, 350.0], [67.3, 350.0], [67.4, 351.0], [67.5, 351.0], [67.6, 352.0], [67.7, 352.0], [67.8, 352.0], [67.9, 353.0], [68.0, 354.0], [68.1, 354.0], [68.2, 355.0], [68.3, 355.0], [68.4, 355.0], [68.5, 355.0], [68.6, 355.0], [68.7, 355.0], [68.8, 356.0], [68.9, 356.0], [69.0, 357.0], [69.1, 357.0], [69.2, 357.0], [69.3, 359.0], [69.4, 359.0], [69.5, 359.0], [69.6, 359.0], [69.7, 360.0], [69.8, 360.0], [69.9, 360.0], [70.0, 360.0], [70.1, 360.0], [70.2, 360.0], [70.3, 361.0], [70.4, 362.0], [70.5, 362.0], [70.6, 362.0], [70.7, 362.0], [70.8, 363.0], [70.9, 364.0], [71.0, 364.0], [71.1, 364.0], [71.2, 364.0], [71.3, 364.0], [71.4, 365.0], [71.5, 365.0], [71.6, 365.0], [71.7, 365.0], [71.8, 366.0], [71.9, 367.0], [72.0, 367.0], [72.1, 367.0], [72.2, 367.0], [72.3, 368.0], [72.4, 368.0], [72.5, 369.0], [72.6, 369.0], [72.7, 369.0], [72.8, 370.0], [72.9, 371.0], [73.0, 371.0], [73.1, 371.0], [73.2, 371.0], [73.3, 371.0], [73.4, 371.0], [73.5, 372.0], [73.6, 372.0], [73.7, 372.0], [73.8, 372.0], [73.9, 372.0], [74.0, 373.0], [74.1, 373.0], [74.2, 374.0], [74.3, 375.0], [74.4, 375.0], [74.5, 375.0], [74.6, 375.0], [74.7, 376.0], [74.8, 376.0], [74.9, 376.0], [75.0, 376.0], [75.1, 376.0], [75.2, 376.0], [75.3, 377.0], [75.4, 377.0], [75.5, 377.0], [75.6, 378.0], [75.7, 378.0], [75.8, 378.0], [75.9, 378.0], [76.0, 378.0], [76.1, 378.0], [76.2, 379.0], [76.3, 380.0], [76.4, 380.0], [76.5, 380.0], [76.6, 381.0], [76.7, 381.0], [76.8, 381.0], [76.9, 381.0], [77.0, 381.0], [77.1, 382.0], [77.2, 382.0], [77.3, 382.0], [77.4, 382.0], [77.5, 383.0], [77.6, 383.0], [77.7, 384.0], [77.8, 385.0], [77.9, 385.0], [78.0, 385.0], [78.1, 386.0], [78.2, 386.0], [78.3, 386.0], [78.4, 386.0], [78.5, 386.0], [78.6, 386.0], [78.7, 387.0], [78.8, 388.0], [78.9, 388.0], [79.0, 388.0], [79.1, 388.0], [79.2, 388.0], [79.3, 388.0], [79.4, 388.0], [79.5, 388.0], [79.6, 388.0], [79.7, 389.0], [79.8, 389.0], [79.9, 389.0], [80.0, 389.0], [80.1, 389.0], [80.2, 390.0], [80.3, 390.0], [80.4, 391.0], [80.5, 391.0], [80.6, 391.0], [80.7, 391.0], [80.8, 392.0], [80.9, 392.0], [81.0, 392.0], [81.1, 392.0], [81.2, 393.0], [81.3, 393.0], [81.4, 393.0], [81.5, 393.0], [81.6, 394.0], [81.7, 394.0], [81.8, 395.0], [81.9, 395.0], [82.0, 396.0], [82.1, 396.0], [82.2, 396.0], [82.3, 396.0], [82.4, 396.0], [82.5, 396.0], [82.6, 396.0], [82.7, 397.0], [82.8, 397.0], [82.9, 397.0], [83.0, 398.0], [83.1, 398.0], [83.2, 398.0], [83.3, 398.0], [83.4, 398.0], [83.5, 398.0], [83.6, 398.0], [83.7, 398.0], [83.8, 399.0], [83.9, 399.0], [84.0, 399.0], [84.1, 400.0], [84.2, 400.0], [84.3, 400.0], [84.4, 401.0], [84.5, 401.0], [84.6, 401.0], [84.7, 401.0], [84.8, 401.0], [84.9, 401.0], [85.0, 401.0], [85.1, 402.0], [85.2, 402.0], [85.3, 403.0], [85.4, 403.0], [85.5, 405.0], [85.6, 405.0], [85.7, 405.0], [85.8, 405.0], [85.9, 405.0], [86.0, 405.0], [86.1, 406.0], [86.2, 406.0], [86.3, 407.0], [86.4, 407.0], [86.5, 408.0], [86.6, 408.0], [86.7, 409.0], [86.8, 409.0], [86.9, 409.0], [87.0, 409.0], [87.1, 410.0], [87.2, 410.0], [87.3, 410.0], [87.4, 410.0], [87.5, 410.0], [87.6, 411.0], [87.7, 411.0], [87.8, 413.0], [87.9, 413.0], [88.0, 413.0], [88.1, 414.0], [88.2, 415.0], [88.3, 415.0], [88.4, 417.0], [88.5, 417.0], [88.6, 417.0], [88.7, 419.0], [88.8, 420.0], [88.9, 420.0], [89.0, 421.0], [89.1, 421.0], [89.2, 421.0], [89.3, 424.0], [89.4, 427.0], [89.5, 427.0], [89.6, 428.0], [89.7, 428.0], [89.8, 429.0], [89.9, 429.0], [90.0, 430.0], [90.1, 431.0], [90.2, 432.0], [90.3, 436.0], [90.4, 437.0], [90.5, 438.0], [90.6, 439.0], [90.7, 449.0], [90.8, 450.0], [90.9, 453.0], [91.0, 479.0], [91.1, 481.0], [91.2, 484.0], [91.3, 488.0], [91.4, 490.0], [91.5, 493.0], [91.6, 494.0], [91.7, 497.0], [91.8, 497.0], [91.9, 498.0], [92.0, 501.0], [92.1, 502.0], [92.2, 507.0], [92.3, 514.0], [92.4, 656.0], [92.5, 747.0], [92.6, 829.0], [92.7, 905.0], [92.8, 1029.0], [92.9, 1112.0], [93.0, 1117.0], [93.1, 1130.0], [93.2, 1141.0], [93.3, 1170.0], [93.4, 1185.0], [93.5, 1198.0], [93.6, 1208.0], [93.7, 1215.0], [93.8, 1217.0], [93.9, 1229.0], [94.0, 1240.0], [94.1, 1250.0], [94.2, 1283.0], [94.3, 1286.0], [94.4, 1298.0], [94.5, 1343.0], [94.6, 1345.0], [94.7, 1360.0], [94.8, 1383.0], [94.9, 1391.0], [95.0, 1398.0], [95.1, 1408.0], [95.2, 1409.0], [95.3, 1415.0], [95.4, 1419.0], [95.5, 1420.0], [95.6, 1432.0], [95.7, 1437.0], [95.8, 1437.0], [95.9, 1445.0], [96.0, 1447.0], [96.1, 1455.0], [96.2, 1473.0], [96.3, 1474.0], [96.4, 1478.0], [96.5, 1520.0], [96.6, 1795.0], [96.7, 1862.0], [96.8, 1875.0], [96.9, 1923.0], [97.0, 1940.0], [97.1, 1963.0], [97.2, 1993.0], [97.3, 2075.0], [97.4, 2075.0], [97.5, 2085.0], [97.6, 2135.0], [97.7, 2173.0], [97.8, 2190.0], [97.9, 2192.0], [98.0, 2207.0], [98.1, 2260.0], [98.2, 2271.0], [98.3, 2275.0], [98.4, 2280.0], [98.5, 2287.0], [98.6, 2343.0], [98.7, 2356.0], [98.8, 2442.0], [98.9, 2447.0], [99.0, 2450.0], [99.1, 2515.0], [99.2, 2523.0], [99.3, 2525.0], [99.4, 2533.0], [99.5, 2596.0], [99.6, 2612.0], [99.7, 2612.0], [99.8, 2613.0], [99.9, 2615.0]], "isOverall": false, "label": "update booking", "isController": false}, {"data": [[0.0, 296.0], [0.1, 297.0], [0.2, 297.0], [0.3, 297.0], [0.4, 298.0], [0.5, 298.0], [0.6, 298.0], [0.7, 299.0], [0.8, 299.0], [0.9, 299.0], [1.0, 300.0], [1.1, 300.0], [1.2, 300.0], [1.3, 300.0], [1.4, 300.0], [1.5, 301.0], [1.6, 301.0], [1.7, 301.0], [1.8, 301.0], [1.9, 301.0], [2.0, 301.0], [2.1, 301.0], [2.2, 301.0], [2.3, 302.0], [2.4, 302.0], [2.5, 302.0], [2.6, 302.0], [2.7, 302.0], [2.8, 303.0], [2.9, 303.0], [3.0, 303.0], [3.1, 303.0], [3.2, 303.0], [3.3, 303.0], [3.4, 304.0], [3.5, 304.0], [3.6, 304.0], [3.7, 304.0], [3.8, 304.0], [3.9, 304.0], [4.0, 304.0], [4.1, 304.0], [4.2, 304.0], [4.3, 304.0], [4.4, 304.0], [4.5, 304.0], [4.6, 304.0], [4.7, 304.0], [4.8, 305.0], [4.9, 305.0], [5.0, 305.0], [5.1, 305.0], [5.2, 305.0], [5.3, 305.0], [5.4, 305.0], [5.5, 305.0], [5.6, 305.0], [5.7, 305.0], [5.8, 305.0], [5.9, 305.0], [6.0, 305.0], [6.1, 305.0], [6.2, 305.0], [6.3, 305.0], [6.4, 305.0], [6.5, 305.0], [6.6, 305.0], [6.7, 305.0], [6.8, 306.0], [6.9, 306.0], [7.0, 306.0], [7.1, 306.0], [7.2, 306.0], [7.3, 306.0], [7.4, 306.0], [7.5, 306.0], [7.6, 306.0], [7.7, 306.0], [7.8, 306.0], [7.9, 306.0], [8.0, 306.0], [8.1, 306.0], [8.2, 306.0], [8.3, 306.0], [8.4, 306.0], [8.5, 306.0], [8.6, 306.0], [8.7, 306.0], [8.8, 306.0], [8.9, 306.0], [9.0, 307.0], [9.1, 307.0], [9.2, 307.0], [9.3, 307.0], [9.4, 307.0], [9.5, 307.0], [9.6, 307.0], [9.7, 307.0], [9.8, 307.0], [9.9, 307.0], [10.0, 307.0], [10.1, 307.0], [10.2, 307.0], [10.3, 307.0], [10.4, 307.0], [10.5, 307.0], [10.6, 307.0], [10.7, 307.0], [10.8, 307.0], [10.9, 307.0], [11.0, 307.0], [11.1, 307.0], [11.2, 307.0], [11.3, 308.0], [11.4, 308.0], [11.5, 308.0], [11.6, 308.0], [11.7, 308.0], [11.8, 308.0], [11.9, 308.0], [12.0, 308.0], [12.1, 308.0], [12.2, 308.0], [12.3, 308.0], [12.4, 308.0], [12.5, 308.0], [12.6, 308.0], [12.7, 308.0], [12.8, 308.0], [12.9, 308.0], [13.0, 308.0], [13.1, 308.0], [13.2, 308.0], [13.3, 308.0], [13.4, 308.0], [13.5, 309.0], [13.6, 309.0], [13.7, 309.0], [13.8, 309.0], [13.9, 309.0], [14.0, 309.0], [14.1, 309.0], [14.2, 309.0], [14.3, 309.0], [14.4, 309.0], [14.5, 309.0], [14.6, 309.0], [14.7, 309.0], [14.8, 309.0], [14.9, 309.0], [15.0, 309.0], [15.1, 309.0], [15.2, 309.0], [15.3, 309.0], [15.4, 309.0], [15.5, 309.0], [15.6, 309.0], [15.7, 309.0], [15.8, 310.0], [15.9, 310.0], [16.0, 310.0], [16.1, 310.0], [16.2, 310.0], [16.3, 310.0], [16.4, 310.0], [16.5, 310.0], [16.6, 310.0], [16.7, 310.0], [16.8, 310.0], [16.9, 310.0], [17.0, 310.0], [17.1, 310.0], [17.2, 310.0], [17.3, 310.0], [17.4, 310.0], [17.5, 310.0], [17.6, 310.0], [17.7, 310.0], [17.8, 310.0], [17.9, 310.0], [18.0, 310.0], [18.1, 310.0], [18.2, 310.0], [18.3, 310.0], [18.4, 310.0], [18.5, 310.0], [18.6, 310.0], [18.7, 310.0], [18.8, 311.0], [18.9, 311.0], [19.0, 311.0], [19.1, 311.0], [19.2, 311.0], [19.3, 311.0], [19.4, 311.0], [19.5, 311.0], [19.6, 311.0], [19.7, 311.0], [19.8, 311.0], [19.9, 311.0], [20.0, 311.0], [20.1, 311.0], [20.2, 311.0], [20.3, 311.0], [20.4, 311.0], [20.5, 311.0], [20.6, 311.0], [20.7, 311.0], [20.8, 311.0], [20.9, 311.0], [21.0, 311.0], [21.1, 311.0], [21.2, 311.0], [21.3, 311.0], [21.4, 311.0], [21.5, 311.0], [21.6, 311.0], [21.7, 311.0], [21.8, 311.0], [21.9, 311.0], [22.0, 311.0], [22.1, 311.0], [22.2, 311.0], [22.3, 311.0], [22.4, 311.0], [22.5, 311.0], [22.6, 312.0], [22.7, 312.0], [22.8, 312.0], [22.9, 312.0], [23.0, 312.0], [23.1, 312.0], [23.2, 312.0], [23.3, 312.0], [23.4, 312.0], [23.5, 312.0], [23.6, 312.0], [23.7, 312.0], [23.8, 312.0], [23.9, 312.0], [24.0, 312.0], [24.1, 312.0], [24.2, 312.0], [24.3, 312.0], [24.4, 312.0], [24.5, 312.0], [24.6, 312.0], [24.7, 312.0], [24.8, 312.0], [24.9, 312.0], [25.0, 312.0], [25.1, 312.0], [25.2, 312.0], [25.3, 312.0], [25.4, 312.0], [25.5, 312.0], [25.6, 312.0], [25.7, 312.0], [25.8, 312.0], [25.9, 312.0], [26.0, 313.0], [26.1, 313.0], [26.2, 313.0], [26.3, 313.0], [26.4, 313.0], [26.5, 313.0], [26.6, 313.0], [26.7, 313.0], [26.8, 313.0], [26.9, 313.0], [27.0, 313.0], [27.1, 313.0], [27.2, 313.0], [27.3, 313.0], [27.4, 313.0], [27.5, 313.0], [27.6, 313.0], [27.7, 313.0], [27.8, 313.0], [27.9, 313.0], [28.0, 313.0], [28.1, 313.0], [28.2, 313.0], [28.3, 313.0], [28.4, 313.0], [28.5, 313.0], [28.6, 314.0], [28.7, 314.0], [28.8, 314.0], [28.9, 314.0], [29.0, 314.0], [29.1, 314.0], [29.2, 314.0], [29.3, 314.0], [29.4, 314.0], [29.5, 314.0], [29.6, 314.0], [29.7, 314.0], [29.8, 314.0], [29.9, 314.0], [30.0, 314.0], [30.1, 314.0], [30.2, 314.0], [30.3, 314.0], [30.4, 314.0], [30.5, 314.0], [30.6, 314.0], [30.7, 314.0], [30.8, 314.0], [30.9, 314.0], [31.0, 314.0], [31.1, 314.0], [31.2, 314.0], [31.3, 314.0], [31.4, 314.0], [31.5, 314.0], [31.6, 314.0], [31.7, 314.0], [31.8, 314.0], [31.9, 314.0], [32.0, 314.0], [32.1, 314.0], [32.2, 314.0], [32.3, 314.0], [32.4, 314.0], [32.5, 314.0], [32.6, 314.0], [32.7, 315.0], [32.8, 315.0], [32.9, 315.0], [33.0, 315.0], [33.1, 315.0], [33.2, 315.0], [33.3, 315.0], [33.4, 315.0], [33.5, 315.0], [33.6, 315.0], [33.7, 315.0], [33.8, 315.0], [33.9, 315.0], [34.0, 315.0], [34.1, 315.0], [34.2, 315.0], [34.3, 315.0], [34.4, 315.0], [34.5, 315.0], [34.6, 315.0], [34.7, 315.0], [34.8, 315.0], [34.9, 315.0], [35.0, 315.0], [35.1, 315.0], [35.2, 315.0], [35.3, 315.0], [35.4, 316.0], [35.5, 316.0], [35.6, 316.0], [35.7, 316.0], [35.8, 316.0], [35.9, 316.0], [36.0, 316.0], [36.1, 316.0], [36.2, 316.0], [36.3, 316.0], [36.4, 316.0], [36.5, 316.0], [36.6, 316.0], [36.7, 316.0], [36.8, 316.0], [36.9, 316.0], [37.0, 316.0], [37.1, 316.0], [37.2, 316.0], [37.3, 316.0], [37.4, 316.0], [37.5, 316.0], [37.6, 316.0], [37.7, 316.0], [37.8, 316.0], [37.9, 316.0], [38.0, 316.0], [38.1, 316.0], [38.2, 316.0], [38.3, 316.0], [38.4, 316.0], [38.5, 316.0], [38.6, 317.0], [38.7, 317.0], [38.8, 317.0], [38.9, 317.0], [39.0, 317.0], [39.1, 317.0], [39.2, 317.0], [39.3, 317.0], [39.4, 317.0], [39.5, 317.0], [39.6, 317.0], [39.7, 317.0], [39.8, 317.0], [39.9, 317.0], [40.0, 317.0], [40.1, 317.0], [40.2, 317.0], [40.3, 317.0], [40.4, 317.0], [40.5, 318.0], [40.6, 318.0], [40.7, 318.0], [40.8, 318.0], [40.9, 318.0], [41.0, 318.0], [41.1, 318.0], [41.2, 318.0], [41.3, 318.0], [41.4, 318.0], [41.5, 318.0], [41.6, 318.0], [41.7, 318.0], [41.8, 318.0], [41.9, 318.0], [42.0, 318.0], [42.1, 318.0], [42.2, 318.0], [42.3, 318.0], [42.4, 318.0], [42.5, 318.0], [42.6, 318.0], [42.7, 318.0], [42.8, 318.0], [42.9, 318.0], [43.0, 318.0], [43.1, 318.0], [43.2, 318.0], [43.3, 319.0], [43.4, 319.0], [43.5, 319.0], [43.6, 319.0], [43.7, 319.0], [43.8, 319.0], [43.9, 319.0], [44.0, 319.0], [44.1, 319.0], [44.2, 319.0], [44.3, 319.0], [44.4, 319.0], [44.5, 319.0], [44.6, 319.0], [44.7, 319.0], [44.8, 319.0], [44.9, 319.0], [45.0, 319.0], [45.1, 319.0], [45.2, 319.0], [45.3, 319.0], [45.4, 319.0], [45.5, 320.0], [45.6, 320.0], [45.7, 320.0], [45.8, 320.0], [45.9, 320.0], [46.0, 320.0], [46.1, 320.0], [46.2, 320.0], [46.3, 320.0], [46.4, 320.0], [46.5, 320.0], [46.6, 320.0], [46.7, 320.0], [46.8, 320.0], [46.9, 320.0], [47.0, 320.0], [47.1, 320.0], [47.2, 320.0], [47.3, 321.0], [47.4, 321.0], [47.5, 321.0], [47.6, 321.0], [47.7, 321.0], [47.8, 321.0], [47.9, 321.0], [48.0, 321.0], [48.1, 321.0], [48.2, 321.0], [48.3, 321.0], [48.4, 321.0], [48.5, 321.0], [48.6, 321.0], [48.7, 321.0], [48.8, 321.0], [48.9, 321.0], [49.0, 321.0], [49.1, 321.0], [49.2, 321.0], [49.3, 321.0], [49.4, 321.0], [49.5, 321.0], [49.6, 321.0], [49.7, 321.0], [49.8, 321.0], [49.9, 322.0], [50.0, 322.0], [50.1, 322.0], [50.2, 322.0], [50.3, 322.0], [50.4, 322.0], [50.5, 322.0], [50.6, 322.0], [50.7, 322.0], [50.8, 322.0], [50.9, 322.0], [51.0, 322.0], [51.1, 322.0], [51.2, 322.0], [51.3, 323.0], [51.4, 323.0], [51.5, 323.0], [51.6, 323.0], [51.7, 323.0], [51.8, 323.0], [51.9, 323.0], [52.0, 323.0], [52.1, 323.0], [52.2, 323.0], [52.3, 323.0], [52.4, 323.0], [52.5, 323.0], [52.6, 323.0], [52.7, 323.0], [52.8, 323.0], [52.9, 323.0], [53.0, 323.0], [53.1, 323.0], [53.2, 324.0], [53.3, 324.0], [53.4, 324.0], [53.5, 324.0], [53.6, 324.0], [53.7, 324.0], [53.8, 324.0], [53.9, 324.0], [54.0, 324.0], [54.1, 324.0], [54.2, 324.0], [54.3, 324.0], [54.4, 324.0], [54.5, 325.0], [54.6, 325.0], [54.7, 325.0], [54.8, 325.0], [54.9, 325.0], [55.0, 325.0], [55.1, 325.0], [55.2, 325.0], [55.3, 325.0], [55.4, 325.0], [55.5, 325.0], [55.6, 325.0], [55.7, 326.0], [55.8, 326.0], [55.9, 326.0], [56.0, 326.0], [56.1, 326.0], [56.2, 326.0], [56.3, 326.0], [56.4, 327.0], [56.5, 327.0], [56.6, 327.0], [56.7, 327.0], [56.8, 327.0], [56.9, 327.0], [57.0, 327.0], [57.1, 327.0], [57.2, 327.0], [57.3, 328.0], [57.4, 328.0], [57.5, 328.0], [57.6, 328.0], [57.7, 328.0], [57.8, 328.0], [57.9, 328.0], [58.0, 328.0], [58.1, 328.0], [58.2, 328.0], [58.3, 329.0], [58.4, 329.0], [58.5, 329.0], [58.6, 329.0], [58.7, 329.0], [58.8, 330.0], [58.9, 330.0], [59.0, 330.0], [59.1, 330.0], [59.2, 330.0], [59.3, 330.0], [59.4, 331.0], [59.5, 331.0], [59.6, 331.0], [59.7, 331.0], [59.8, 331.0], [59.9, 331.0], [60.0, 331.0], [60.1, 331.0], [60.2, 331.0], [60.3, 332.0], [60.4, 332.0], [60.5, 332.0], [60.6, 332.0], [60.7, 333.0], [60.8, 334.0], [60.9, 334.0], [61.0, 334.0], [61.1, 334.0], [61.2, 334.0], [61.3, 335.0], [61.4, 335.0], [61.5, 335.0], [61.6, 335.0], [61.7, 335.0], [61.8, 335.0], [61.9, 335.0], [62.0, 335.0], [62.1, 335.0], [62.2, 336.0], [62.3, 336.0], [62.4, 336.0], [62.5, 336.0], [62.6, 336.0], [62.7, 336.0], [62.8, 337.0], [62.9, 337.0], [63.0, 337.0], [63.1, 338.0], [63.2, 338.0], [63.3, 338.0], [63.4, 338.0], [63.5, 338.0], [63.6, 339.0], [63.7, 339.0], [63.8, 340.0], [63.9, 341.0], [64.0, 341.0], [64.1, 341.0], [64.2, 341.0], [64.3, 342.0], [64.4, 343.0], [64.5, 343.0], [64.6, 343.0], [64.7, 344.0], [64.8, 344.0], [64.9, 344.0], [65.0, 344.0], [65.1, 344.0], [65.2, 344.0], [65.3, 344.0], [65.4, 345.0], [65.5, 345.0], [65.6, 345.0], [65.7, 347.0], [65.8, 347.0], [65.9, 347.0], [66.0, 348.0], [66.1, 348.0], [66.2, 349.0], [66.3, 349.0], [66.4, 349.0], [66.5, 350.0], [66.6, 350.0], [66.7, 350.0], [66.8, 350.0], [66.9, 350.0], [67.0, 350.0], [67.1, 351.0], [67.2, 351.0], [67.3, 351.0], [67.4, 351.0], [67.5, 351.0], [67.6, 352.0], [67.7, 352.0], [67.8, 353.0], [67.9, 353.0], [68.0, 353.0], [68.1, 353.0], [68.2, 354.0], [68.3, 355.0], [68.4, 355.0], [68.5, 356.0], [68.6, 356.0], [68.7, 356.0], [68.8, 356.0], [68.9, 356.0], [69.0, 357.0], [69.1, 357.0], [69.2, 357.0], [69.3, 357.0], [69.4, 357.0], [69.5, 357.0], [69.6, 357.0], [69.7, 358.0], [69.8, 358.0], [69.9, 358.0], [70.0, 358.0], [70.1, 358.0], [70.2, 358.0], [70.3, 359.0], [70.4, 359.0], [70.5, 359.0], [70.6, 359.0], [70.7, 359.0], [70.8, 360.0], [70.9, 360.0], [71.0, 361.0], [71.1, 361.0], [71.2, 362.0], [71.3, 362.0], [71.4, 362.0], [71.5, 363.0], [71.6, 364.0], [71.7, 364.0], [71.8, 364.0], [71.9, 364.0], [72.0, 365.0], [72.1, 365.0], [72.2, 366.0], [72.3, 366.0], [72.4, 366.0], [72.5, 366.0], [72.6, 367.0], [72.7, 367.0], [72.8, 367.0], [72.9, 368.0], [73.0, 369.0], [73.1, 370.0], [73.2, 370.0], [73.3, 370.0], [73.4, 370.0], [73.5, 371.0], [73.6, 371.0], [73.7, 371.0], [73.8, 371.0], [73.9, 371.0], [74.0, 372.0], [74.1, 373.0], [74.2, 373.0], [74.3, 373.0], [74.4, 374.0], [74.5, 374.0], [74.6, 374.0], [74.7, 374.0], [74.8, 374.0], [74.9, 375.0], [75.0, 375.0], [75.1, 375.0], [75.2, 375.0], [75.3, 375.0], [75.4, 375.0], [75.5, 375.0], [75.6, 375.0], [75.7, 376.0], [75.8, 376.0], [75.9, 377.0], [76.0, 377.0], [76.1, 377.0], [76.2, 377.0], [76.3, 378.0], [76.4, 378.0], [76.5, 378.0], [76.6, 378.0], [76.7, 378.0], [76.8, 378.0], [76.9, 378.0], [77.0, 378.0], [77.1, 379.0], [77.2, 379.0], [77.3, 380.0], [77.4, 380.0], [77.5, 380.0], [77.6, 380.0], [77.7, 380.0], [77.8, 380.0], [77.9, 380.0], [78.0, 381.0], [78.1, 381.0], [78.2, 381.0], [78.3, 382.0], [78.4, 382.0], [78.5, 383.0], [78.6, 383.0], [78.7, 383.0], [78.8, 383.0], [78.9, 383.0], [79.0, 383.0], [79.1, 383.0], [79.2, 383.0], [79.3, 383.0], [79.4, 384.0], [79.5, 384.0], [79.6, 384.0], [79.7, 384.0], [79.8, 384.0], [79.9, 384.0], [80.0, 384.0], [80.1, 384.0], [80.2, 384.0], [80.3, 384.0], [80.4, 384.0], [80.5, 385.0], [80.6, 385.0], [80.7, 385.0], [80.8, 385.0], [80.9, 386.0], [81.0, 386.0], [81.1, 386.0], [81.2, 387.0], [81.3, 387.0], [81.4, 387.0], [81.5, 387.0], [81.6, 388.0], [81.7, 388.0], [81.8, 388.0], [81.9, 388.0], [82.0, 388.0], [82.1, 388.0], [82.2, 388.0], [82.3, 389.0], [82.4, 389.0], [82.5, 389.0], [82.6, 390.0], [82.7, 390.0], [82.8, 390.0], [82.9, 390.0], [83.0, 390.0], [83.1, 390.0], [83.2, 390.0], [83.3, 391.0], [83.4, 391.0], [83.5, 391.0], [83.6, 391.0], [83.7, 391.0], [83.8, 391.0], [83.9, 391.0], [84.0, 391.0], [84.1, 392.0], [84.2, 392.0], [84.3, 392.0], [84.4, 392.0], [84.5, 393.0], [84.6, 393.0], [84.7, 393.0], [84.8, 393.0], [84.9, 393.0], [85.0, 393.0], [85.1, 394.0], [85.2, 394.0], [85.3, 394.0], [85.4, 394.0], [85.5, 395.0], [85.6, 395.0], [85.7, 396.0], [85.8, 396.0], [85.9, 396.0], [86.0, 396.0], [86.1, 396.0], [86.2, 396.0], [86.3, 397.0], [86.4, 397.0], [86.5, 397.0], [86.6, 397.0], [86.7, 397.0], [86.8, 397.0], [86.9, 398.0], [87.0, 398.0], [87.1, 398.0], [87.2, 398.0], [87.3, 398.0], [87.4, 399.0], [87.5, 400.0], [87.6, 400.0], [87.7, 400.0], [87.8, 401.0], [87.9, 402.0], [88.0, 402.0], [88.1, 403.0], [88.2, 403.0], [88.3, 403.0], [88.4, 403.0], [88.5, 403.0], [88.6, 403.0], [88.7, 404.0], [88.8, 405.0], [88.9, 405.0], [89.0, 406.0], [89.1, 406.0], [89.2, 406.0], [89.3, 407.0], [89.4, 407.0], [89.5, 408.0], [89.6, 408.0], [89.7, 409.0], [89.8, 410.0], [89.9, 411.0], [90.0, 411.0], [90.1, 413.0], [90.2, 414.0], [90.3, 414.0], [90.4, 415.0], [90.5, 415.0], [90.6, 419.0], [90.7, 421.0], [90.8, 421.0], [90.9, 421.0], [91.0, 424.0], [91.1, 425.0], [91.2, 427.0], [91.3, 431.0], [91.4, 432.0], [91.5, 434.0], [91.6, 434.0], [91.7, 434.0], [91.8, 444.0], [91.9, 612.0], [92.0, 623.0], [92.1, 630.0], [92.2, 645.0], [92.3, 1202.0], [92.4, 1207.0], [92.5, 1211.0], [92.6, 1211.0], [92.7, 1213.0], [92.8, 1225.0], [92.9, 1236.0], [93.0, 1251.0], [93.1, 1261.0], [93.2, 1269.0], [93.3, 1275.0], [93.4, 1277.0], [93.5, 1290.0], [93.6, 1294.0], [93.7, 1295.0], [93.8, 1315.0], [93.9, 1316.0], [94.0, 1325.0], [94.1, 1329.0], [94.2, 1335.0], [94.3, 1342.0], [94.4, 1346.0], [94.5, 1349.0], [94.6, 1349.0], [94.7, 1349.0], [94.8, 1360.0], [94.9, 1362.0], [95.0, 1362.0], [95.1, 1363.0], [95.2, 1363.0], [95.3, 1370.0], [95.4, 1372.0], [95.5, 1378.0], [95.6, 1380.0], [95.7, 1383.0], [95.8, 1387.0], [95.9, 1391.0], [96.0, 1396.0], [96.1, 1425.0], [96.2, 1428.0], [96.3, 1432.0], [96.4, 1436.0], [96.5, 1439.0], [96.6, 1441.0], [96.7, 1449.0], [96.8, 1454.0], [96.9, 1457.0], [97.0, 1457.0], [97.1, 1474.0], [97.2, 1477.0], [97.3, 1485.0], [97.4, 1491.0], [97.5, 1492.0], [97.6, 1493.0], [97.7, 1497.0], [97.8, 1499.0], [97.9, 1516.0], [98.0, 1701.0], [98.1, 1934.0], [98.2, 2014.0], [98.3, 2031.0], [98.4, 2096.0], [98.5, 2150.0], [98.6, 2154.0], [98.7, 2213.0], [98.8, 2227.0], [98.9, 2281.0], [99.0, 2292.0], [99.1, 2549.0], [99.2, 2695.0], [99.3, 2749.0], [99.4, 2753.0], [99.5, 2773.0], [99.6, 2775.0], [99.7, 2790.0], [99.8, 2794.0], [99.9, 3806.0]], "isOverall": false, "label": "get booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 865.0, "series": [{"data": [[2000.0, 1.0], [2100.0, 2.0], [2200.0, 5.0], [2300.0, 3.0], [2400.0, 4.0], [2500.0, 2.0], [2600.0, 5.0], [2700.0, 13.0], [3100.0, 3.0], [3200.0, 2.0], [3600.0, 4.0], [3700.0, 1.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 2.0], [4200.0, 2.0], [4300.0, 1.0], [4400.0, 7.0], [4500.0, 12.0], [4600.0, 7.0], [4800.0, 5.0], [4700.0, 5.0], [4900.0, 12.0], [5000.0, 4.0], [5100.0, 5.0], [5200.0, 17.0], [5300.0, 13.0], [5400.0, 8.0], [5600.0, 5.0], [5500.0, 4.0], [5700.0, 10.0], [5800.0, 10.0], [5900.0, 8.0], [6000.0, 3.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6800.0, 5.0], [6700.0, 2.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 5.0], [7200.0, 4.0], [7400.0, 4.0], [7300.0, 3.0], [7500.0, 3.0], [7600.0, 3.0], [7700.0, 2.0], [7900.0, 6.0], [7800.0, 2.0], [8000.0, 2.0], [8100.0, 4.0], [8200.0, 8.0], [8300.0, 8.0], [8400.0, 7.0], [8600.0, 5.0], [8500.0, 8.0], [8700.0, 14.0], [8800.0, 5.0], [9000.0, 7.0], [8900.0, 10.0], [9100.0, 7.0], [9200.0, 9.0], [9300.0, 7.0], [9400.0, 9.0], [9500.0, 2.0], [10100.0, 2.0], [10600.0, 2.0], [10700.0, 3.0], [11100.0, 4.0], [11000.0, 3.0], [11200.0, 9.0], [10800.0, 2.0], [10900.0, 2.0], [11300.0, 6.0], [11500.0, 14.0], [11400.0, 9.0], [11600.0, 8.0], [11700.0, 13.0], [11800.0, 17.0], [11900.0, 6.0], [12000.0, 7.0], [12100.0, 13.0], [12200.0, 8.0], [12300.0, 7.0], [12400.0, 7.0], [12500.0, 4.0], [12600.0, 6.0], [12700.0, 6.0], [12800.0, 2.0], [12900.0, 9.0], [13100.0, 10.0], [13200.0, 7.0], [13300.0, 3.0], [13000.0, 2.0], [13400.0, 4.0], [13500.0, 5.0], [13600.0, 3.0], [13700.0, 10.0], [13800.0, 7.0], [13900.0, 8.0], [14000.0, 8.0], [14200.0, 5.0], [14300.0, 5.0], [14100.0, 9.0], [14400.0, 4.0], [14600.0, 9.0], [14500.0, 2.0], [14700.0, 9.0], [14800.0, 8.0], [14900.0, 12.0], [15000.0, 7.0], [15100.0, 9.0], [15300.0, 6.0], [15200.0, 1.0], [15400.0, 2.0], [15500.0, 3.0], [15600.0, 6.0], [15700.0, 4.0], [15800.0, 5.0], [15900.0, 7.0], [16000.0, 6.0], [16100.0, 4.0], [16200.0, 3.0], [16300.0, 2.0], [16400.0, 6.0], [21400.0, 2.0], [22000.0, 1.0], [22200.0, 1.0], [22400.0, 1.0], [22600.0, 5.0], [22800.0, 5.0], [23000.0, 4.0], [23200.0, 4.0], [23400.0, 9.0], [23800.0, 3.0], [23600.0, 4.0], [24000.0, 3.0], [24200.0, 2.0], [24400.0, 5.0], [24800.0, 6.0], [25000.0, 8.0], [24600.0, 1.0], [25200.0, 7.0], [25400.0, 5.0], [25800.0, 2.0], [25600.0, 2.0], [26000.0, 3.0], [26200.0, 7.0], [26600.0, 3.0], [26400.0, 3.0], [27000.0, 9.0], [26800.0, 3.0], [27200.0, 5.0], [27400.0, 6.0], [27600.0, 5.0], [27800.0, 3.0], [28800.0, 2.0], [29200.0, 5.0], [29400.0, 4.0], [29600.0, 2.0], [30000.0, 1.0], [30400.0, 1.0], [16500.0, 2.0], [16700.0, 1.0], [22300.0, 4.0], [22500.0, 1.0], [21900.0, 1.0], [22700.0, 6.0], [22900.0, 3.0], [23100.0, 10.0], [23300.0, 1.0], [23700.0, 5.0], [23900.0, 4.0], [24100.0, 1.0], [24300.0, 5.0], [24500.0, 1.0], [24700.0, 3.0], [24900.0, 3.0], [25500.0, 11.0], [25100.0, 2.0], [25300.0, 5.0], [25700.0, 5.0], [25900.0, 3.0], [26100.0, 8.0], [26300.0, 1.0], [26500.0, 5.0], [26700.0, 3.0], [26900.0, 6.0], [27100.0, 5.0], [27300.0, 4.0], [27500.0, 3.0], [27700.0, 3.0], [27900.0, 7.0], [28500.0, 1.0], [28300.0, 1.0], [29100.0, 1.0], [29300.0, 2.0], [29500.0, 4.0], [29700.0, 4.0], [29900.0, 2.0], [30100.0, 1.0], [51000.0, 1.0]], "isOverall": false, "label": "create token", "isController": false}, {"data": [[2200.0, 5.0], [2300.0, 7.0], [2400.0, 4.0], [600.0, 3.0], [2800.0, 1.0], [200.0, 16.0], [800.0, 1.0], [3900.0, 1.0], [1000.0, 1.0], [1100.0, 7.0], [4600.0, 1.0], [300.0, 863.0], [1200.0, 17.0], [1300.0, 8.0], [1400.0, 14.0], [1500.0, 2.0], [400.0, 47.0], [1800.0, 1.0], [1900.0, 1.0]], "isOverall": false, "label": "create booking", "isController": false}, {"data": [[2100.0, 4.0], [2200.0, 6.0], [2300.0, 2.0], [2400.0, 3.0], [600.0, 1.0], [2500.0, 5.0], [2600.0, 4.0], [700.0, 1.0], [800.0, 1.0], [200.0, 2.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 7.0], [300.0, 839.0], [1200.0, 9.0], [1300.0, 6.0], [1400.0, 14.0], [1500.0, 1.0], [400.0, 79.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 3.0], [500.0, 4.0]], "isOverall": false, "label": "update booking", "isController": false}, {"data": [[2100.0, 2.0], [2200.0, 4.0], [600.0, 4.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 6.0], [200.0, 10.0], [3800.0, 1.0], [300.0, 865.0], [1200.0, 15.0], [1300.0, 23.0], [1400.0, 18.0], [1500.0, 1.0], [400.0, 44.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 3.0]], "isOverall": false, "label": "get booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 51000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 156.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2765.0, "series": [{"data": [[0.0, 2765.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 156.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1079.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 538.4142500000007, "minX": 1.73273016E12, "maxY": 538.4142500000007, "series": [{"data": [[1.73273016E12, 538.4142500000007]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73273016E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 297.0, "minX": 1.0, "maxY": 51033.0, "series": [{"data": [[19.0, 30494.0], [28.0, 30125.5], [30.0, 29959.0], [31.0, 29616.28571428571], [33.0, 29119.0], [32.0, 29333.625], [35.0, 28883.0], [41.0, 28330.0], [58.0, 28521.0], [67.0, 27999.0], [75.0, 27931.0], [73.0, 27810.0], [87.0, 27984.0], [85.0, 27827.0], [91.0, 27817.0], [90.0, 27939.0], [88.0, 27971.0], [93.0, 27559.333333333332], [92.0, 27793.0], [99.0, 27510.0], [98.0, 27606.5], [102.0, 27372.0], [100.0, 27612.0], [106.0, 27454.5], [105.0, 27260.0], [111.0, 27305.0], [110.0, 27098.5], [109.0, 27313.5], [115.0, 27175.333333333332], [113.0, 27057.0], [116.0, 27101.5], [123.0, 27087.0], [122.0, 27033.333333333332], [126.0, 26931.0], [125.0, 26989.666666666668], [124.0, 27085.0], [133.0, 26968.0], [132.0, 26984.0], [129.0, 26832.0], [128.0, 26924.5], [139.0, 26795.0], [151.0, 26387.0], [149.0, 26581.0], [147.0, 26662.0], [157.0, 26237.0], [156.0, 26604.0], [153.0, 26693.0], [152.0, 26587.0], [165.0, 26403.333333333332], [164.0, 26187.0], [162.0, 26187.0], [175.0, 26096.5], [174.0, 26019.0], [172.0, 26178.0], [169.0, 26242.5], [168.0, 26423.0], [183.0, 25758.0], [182.0, 25766.0], [181.0, 25829.5], [180.0, 25998.5], [176.0, 26134.0], [189.0, 25446.8], [187.0, 25633.499999999996], [186.0, 25620.0], [185.0, 25681.0], [184.0, 25973.333333333332], [199.0, 25278.0], [198.0, 25322.2], [197.0, 25307.0], [207.0, 24939.0], [206.0, 25008.0], [204.0, 25273.0], [203.0, 25048.333333333332], [202.0, 25233.333333333332], [201.0, 25162.0], [200.0, 25207.0], [214.0, 25072.0], [213.0, 24691.0], [209.0, 24839.8], [218.0, 24478.0], [230.0, 24333.0], [229.0, 24423.0], [227.0, 24513.75], [225.0, 24419.5], [239.0, 24109.0], [238.0, 24266.0], [237.0, 24229.0], [232.0, 24316.0], [245.0, 23964.6], [244.0, 24055.0], [242.0, 24094.0], [254.0, 23609.0], [253.0, 23647.0], [252.0, 23604.0], [250.0, 23701.0], [248.0, 23725.0], [270.0, 23158.5], [271.0, 23099.5], [268.0, 23154.5], [267.0, 23354.5], [265.0, 23784.0], [263.0, 23294.0], [259.0, 23367.0], [257.0, 23446.666666666668], [256.0, 23595.444444444445], [278.0, 21770.0], [277.0, 22567.684210526317], [276.0, 22916.88888888889], [275.0, 22950.8], [273.0, 23146.0], [334.0, 16556.0], [331.0, 16279.0], [320.0, 16719.0], [350.0, 16255.0], [349.0, 15972.0], [345.0, 16295.5], [343.0, 16316.0], [341.0, 16451.0], [340.0, 16505.0], [337.0, 16191.5], [365.0, 16173.0], [363.0, 16022.0], [355.0, 16105.0], [381.0, 15875.0], [382.0, 15956.0], [380.0, 15835.0], [379.0, 15883.5], [377.0, 15909.0], [374.0, 16025.0], [373.0, 16049.5], [369.0, 15921.0], [368.0, 16042.5], [395.0, 15882.0], [385.0, 15829.0], [404.0, 15716.0], [402.0, 15649.0], [430.0, 15486.5], [425.0, 15679.0], [424.0, 15312.0], [421.0, 15595.0], [418.0, 15711.0], [416.0, 15320.5], [440.0, 15106.0], [439.0, 15557.0], [436.0, 15552.0], [434.0, 15081.0], [433.0, 15609.0], [432.0, 15619.0], [463.0, 15420.0], [461.0, 15179.0], [458.0, 15305.0], [456.0, 15067.0], [450.0, 15481.0], [474.0, 14918.0], [466.0, 15386.0], [495.0, 15012.5], [492.0, 14989.666666666666], [491.0, 14999.6], [490.0, 14852.0], [486.0, 15178.333333333334], [511.0, 14820.0], [508.0, 14851.4], [500.0, 14988.6], [499.0, 14984.0], [542.0, 14388.0], [537.0, 14573.0], [518.0, 14793.0], [517.0, 14412.0], [514.0, 14804.0], [534.0, 14656.0], [533.0, 14479.666666666666], [532.0, 14320.0], [530.0, 14742.333333333332], [529.0, 14707.0], [524.0, 14861.0], [523.0, 14771.5], [521.0, 14878.5], [520.0, 14426.0], [574.0, 13782.5], [575.0, 13743.5], [573.0, 13844.714285714286], [572.0, 14010.75], [571.0, 13783.0], [570.0, 14055.0], [559.0, 14022.0], [546.0, 14360.25], [544.0, 14185.5], [550.0, 14101.0], [547.0, 14188.666666666666], [558.0, 13977.0], [557.0, 14123.0], [555.0, 14305.5], [552.0, 14134.0], [566.0, 14048.0], [562.0, 13936.0], [561.0, 14136.666666666666], [593.0, 13506.0], [607.0, 12880.25], [603.0, 13235.0], [601.0, 13429.0], [600.0, 13431.0], [591.0, 13346.333333333334], [583.0, 13624.333333333334], [581.0, 13721.5], [589.0, 13333.833333333332], [588.0, 13271.0], [586.0, 13253.0], [584.0, 13444.333333333334], [599.0, 12952.0], [596.0, 12974.666666666666], [595.0, 13328.666666666666], [592.0, 13154.0], [637.0, 11909.461538461537], [638.0, 11929.0], [625.0, 12222.0], [624.0, 12262.75], [636.0, 12259.666666666666], [635.0, 11988.124999999998], [633.0, 12084.5], [632.0, 12406.0], [623.0, 12426.5], [609.0, 12793.4], [612.0, 12297.0], [611.0, 12931.0], [615.0, 12777.0], [614.0, 12402.0], [622.0, 12478.0], [618.0, 12625.777777777777], [630.0, 12157.2], [628.0, 12353.25], [627.0, 12251.0], [626.0, 12591.0], [644.0, 11641.4], [652.0, 10104.0], [651.0, 11146.933333333334], [649.0, 11601.551724137931], [648.0, 11751.266666666666], [647.0, 12114.333333333334], [646.0, 11531.0], [645.0, 11735.0], [643.0, 11976.125000000002], [727.0, 9422.0], [759.0, 9168.0], [756.0, 9497.0], [739.0, 9247.0], [785.0, 9309.666666666666], [797.0, 9001.0], [799.0, 8827.999999999998], [784.0, 9273.0], [796.0, 8943.0], [795.0, 8945.25], [792.0, 8866.5], [775.0, 9467.666666666666], [780.0, 9268.0], [779.0, 9361.0], [778.0, 9448.0], [777.0, 8946.0], [791.0, 9128.5], [790.0, 9225.0], [787.0, 9081.666666666666], [824.0, 8492.5], [830.0, 8408.5], [831.0, 8067.0], [827.0, 7906.0], [826.0, 8290.666666666668], [825.0, 8329.153846153846], [815.0, 8809.0], [802.0, 8832.4], [800.0, 9042.25], [805.0, 8963.0], [804.0, 8465.0], [807.0, 9058.0], [806.0, 9092.0], [814.0, 8465.0], [811.0, 8706.0], [810.0, 8774.0], [809.0, 8580.0], [808.0, 8558.5], [823.0, 8749.0], [821.0, 8614.6], [820.0, 8474.5], [816.0, 8491.5], [850.0, 7358.2], [860.0, 7044.0], [858.0, 7111.857142857143], [856.0, 7444.75], [838.0, 7478.0], [837.0, 8090.0], [836.0, 8294.0], [833.0, 8363.0], [832.0, 7785.5], [855.0, 6867.333333333333], [853.0, 6891.0], [852.0, 7679.0], [848.0, 7182.5], [847.0, 7216.0], [846.0, 7675.0], [845.0, 7995.0], [843.0, 7344.0], [841.0, 7558.0], [840.0, 7402.0], [881.0, 6821.0], [868.0, 6312.0], [922.0, 6244.0], [918.0, 5725.0], [901.0, 6172.0], [956.0, 5649.0], [959.0, 5376.375], [958.0, 5503.666666666667], [957.0, 5554.692307692308], [955.0, 5734.6], [954.0, 5738.999999999999], [953.0, 5816.25], [952.0, 5903.666666666667], [942.0, 5484.0], [933.0, 5964.0], [951.0, 5746.333333333333], [949.0, 5463.5], [985.0, 3722.3333333333335], [983.0, 3821.5], [977.0, 3847.166666666667], [976.0, 4217.0], [974.0, 4875.0], [961.0, 5719.0], [960.0, 5331.285714285714], [965.0, 4870.666666666667], [962.0, 5189.466666666665], [972.0, 4879.0], [971.0, 4913.0], [970.0, 4680.458333333333], [969.0, 4799.8], [968.0, 4948.0], [967.0, 4873.428571428571], [966.0, 5135.2], [1000.0, 2647.3250000000003], [1.0, 51033.0]], "isOverall": false, "label": "create token", "isController": false}, {"data": [[573.4130000000004, 14359.987000000005]], "isOverall": false, "label": "create token-Aggregated", "isController": false}, {"data": [[8.0, 328.0], [13.0, 319.0], [19.0, 315.0], [28.0, 318.5], [29.0, 315.5], [30.0, 312.0], [31.0, 335.0769230769231], [32.0, 316.3333333333333], [44.0, 318.0], [53.0, 317.0], [59.0, 316.0], [67.0, 310.0], [66.0, 326.0], [71.0, 306.0], [69.0, 308.0], [68.0, 311.0], [75.0, 313.5], [74.0, 329.0], [73.0, 309.0], [72.0, 308.3333333333333], [83.0, 317.5], [80.0, 322.0], [85.0, 334.3333333333333], [91.0, 303.0], [88.0, 312.0], [94.0, 312.8], [93.0, 321.0], [92.0, 323.0], [99.0, 309.0], [98.0, 307.0], [102.0, 301.5], [100.0, 308.0], [106.0, 313.0], [105.0, 311.0], [111.0, 313.8571428571429], [110.0, 302.0], [109.0, 311.25], [115.0, 311.0], [117.0, 319.0], [122.0, 334.0], [126.0, 317.0], [125.0, 315.0], [132.0, 315.0], [130.0, 327.0], [139.0, 319.0], [136.0, 318.0], [148.0, 304.6666666666667], [147.0, 312.0], [146.0, 317.0], [145.0, 315.0], [158.0, 317.0], [156.0, 302.0], [155.0, 312.0], [153.0, 308.5], [152.0, 311.0], [165.0, 307.8], [164.0, 306.0], [160.0, 306.0], [175.0, 309.2], [174.0, 312.5], [172.0, 313.0], [171.0, 318.0], [169.0, 313.0], [168.0, 309.0], [183.0, 312.0], [182.0, 297.0], [181.0, 305.0], [179.0, 310.0], [176.0, 310.6], [189.0, 308.6666666666667], [188.0, 310.0], [187.0, 341.1], [185.0, 317.3333333333333], [199.0, 302.0], [198.0, 313.5], [197.0, 303.0], [195.0, 310.3333333333333], [207.0, 307.0], [206.0, 314.0], [203.0, 312.0], [202.0, 308.0], [201.0, 305.0], [214.0, 305.0], [213.0, 312.0], [211.0, 304.0], [209.0, 344.3333333333333], [222.0, 312.0], [218.0, 305.0], [216.0, 1049.0], [230.0, 312.0], [227.0, 314.0], [233.0, 318.5], [232.0, 329.0], [247.0, 316.75], [246.0, 315.5], [245.0, 313.0], [244.0, 315.0], [243.0, 311.0], [242.0, 308.0], [254.0, 337.5], [253.0, 315.5], [252.0, 324.0], [248.0, 310.28571428571433], [270.0, 312.6666666666667], [267.0, 327.0], [265.0, 318.0], [262.0, 317.0], [257.0, 306.0], [256.0, 325.0], [278.0, 308.0], [277.0, 313.5], [276.0, 311.0], [275.0, 308.3333333333333], [273.0, 308.5], [302.0, 4679.0], [299.0, 321.0], [318.0, 316.0], [317.0, 308.6666666666667], [304.0, 2227.0], [334.0, 301.0], [331.0, 322.0], [326.0, 313.1666666666667], [325.0, 307.0], [322.0, 321.0], [321.0, 308.0], [320.0, 316.5], [349.0, 313.25], [350.0, 298.0], [348.0, 313.25], [346.0, 3915.0], [345.0, 322.5], [343.0, 315.5], [341.0, 320.0], [340.0, 314.0], [339.0, 311.0], [367.0, 330.0], [365.0, 336.0], [355.0, 325.0], [353.0, 2201.0], [382.0, 302.0], [379.0, 317.0], [378.0, 305.0], [377.0, 855.25], [368.0, 2300.0], [398.0, 318.0], [395.0, 318.0], [389.0, 310.4], [412.0, 319.3333333333333], [411.0, 304.0], [408.0, 329.0], [425.0, 332.0], [417.0, 328.0], [446.0, 1815.3333333333335], [443.0, 323.0], [442.0, 329.0], [440.0, 336.0], [435.0, 315.0], [433.0, 325.0], [432.0, 324.0], [463.0, 317.0], [461.0, 324.0], [460.0, 300.0], [453.0, 314.0], [451.0, 316.5], [449.0, 315.0], [448.0, 982.3333333333333], [476.0, 335.0], [474.0, 335.0], [471.0, 328.75], [465.0, 1343.5], [464.0, 302.0], [494.0, 358.5], [495.0, 368.0], [492.0, 356.0], [491.0, 355.0], [489.0, 903.0], [488.0, 332.0], [487.0, 626.0], [486.0, 348.2], [480.0, 345.5], [511.0, 351.3333333333333], [508.0, 347.5], [506.0, 352.0], [504.0, 356.0], [500.0, 365.0], [541.0, 1829.25], [542.0, 1332.0], [540.0, 383.0], [538.0, 1869.75], [533.0, 365.5], [532.0, 353.5], [530.0, 353.0], [524.0, 509.3333333333333], [514.0, 347.0], [523.0, 1090.8333333333335], [570.0, 406.5], [574.0, 382.5], [573.0, 545.5], [572.0, 400.3333333333333], [561.0, 395.0], [554.0, 1381.0], [552.0, 387.5], [550.0, 389.0], [547.0, 494.0], [546.0, 372.0], [544.0, 375.0], [548.0, 371.0], [583.0, 930.1666666666667], [605.0, 387.25], [607.0, 402.74999999999994], [603.0, 410.0], [602.0, 408.0], [600.0, 410.0], [581.0, 813.0], [580.0, 388.0], [579.0, 397.0], [578.0, 384.0], [577.0, 1429.0], [576.0, 389.0], [591.0, 406.5], [589.0, 1373.6666666666667], [588.0, 1133.25], [586.0, 394.0], [585.0, 380.0], [596.0, 384.0], [595.0, 393.6666666666667], [594.0, 1246.0], [593.0, 1276.3333333333333], [636.0, 316.5], [627.0, 384.6666666666667], [637.0, 310.0], [624.0, 401.0], [635.0, 325.4], [632.0, 352.5], [623.0, 395.6666666666667], [609.0, 385.0], [612.0, 385.6], [610.0, 377.3333333333333], [615.0, 379.0], [614.0, 412.0], [622.0, 391.3333333333333], [618.0, 379.25], [631.0, 345.5], [630.0, 369.3333333333333], [628.0, 385.5], [626.0, 390.0], [625.0, 400.5], [651.0, 307.75], [649.0, 326.64705882352933], [648.0, 307.57142857142856], [646.0, 308.0], [644.0, 307.0], [643.0, 311.0], [641.0, 307.0], [690.0, 308.0], [735.0, 961.2], [732.0, 322.0], [721.0, 352.0], [711.0, 309.0], [749.0, 321.0], [765.0, 385.0], [759.0, 349.0], [752.0, 327.0], [748.0, 318.0], [746.0, 322.0], [745.0, 321.0], [744.0, 316.0], [743.0, 310.8], [741.0, 315.0], [739.0, 317.5], [792.0, 458.42857142857144], [799.0, 343.5], [796.0, 313.0], [795.0, 315.0], [790.0, 307.5], [783.0, 323.0], [768.0, 390.0], [773.0, 404.0], [772.0, 389.5], [775.0, 421.62500000000006], [774.0, 416.0], [779.0, 325.2857142857143], [778.0, 345.75], [776.0, 405.33333333333337], [830.0, 320.0], [831.0, 344.0], [816.0, 1024.5], [818.0, 321.0], [817.0, 322.0], [820.0, 337.0], [819.0, 341.0], [829.0, 304.0], [827.0, 316.0], [826.0, 310.0], [825.0, 1265.8333333333333], [824.0, 1222.0], [807.0, 368.125], [806.0, 406.0], [805.0, 392.0], [804.0, 360.0], [802.0, 353.0], [800.0, 342.6], [811.0, 317.0], [809.0, 311.2], [808.0, 314.3333333333333], [823.0, 337.0], [821.0, 333.5], [860.0, 371.0], [858.0, 815.0], [838.0, 374.0], [837.0, 375.0], [833.0, 384.0], [832.0, 367.5], [853.0, 380.0], [852.0, 1444.0], [850.0, 394.0], [848.0, 394.6666666666667], [843.0, 391.0], [841.0, 370.0], [840.0, 392.0], [891.0, 407.0], [885.0, 421.0], [925.0, 314.0], [926.0, 318.0], [922.0, 308.5], [921.0, 306.5], [920.0, 309.0], [903.0, 315.0], [899.0, 344.0], [898.0, 358.3333333333333], [897.0, 367.0], [918.0, 323.0], [916.0, 324.5], [913.0, 321.0], [908.0, 319.0], [906.0, 316.6666666666667], [958.0, 321.0], [959.0, 312.8], [945.0, 313.6666666666667], [957.0, 314.75], [954.0, 310.6666666666667], [953.0, 302.6666666666667], [952.0, 318.5], [942.0, 316.0], [934.0, 318.0], [933.0, 319.5], [937.0, 314.25], [936.0, 297.0], [951.0, 316.2], [949.0, 313.7], [948.0, 326.0], [946.0, 315.0], [966.0, 631.5], [977.0, 385.40000000000003], [976.0, 409.0], [971.0, 1248.5], [970.0, 373.0], [969.0, 1428.0], [968.0, 862.0], [967.0, 345.0], [965.0, 431.76190476190476], [962.0, 413.6470588235294], [961.0, 305.0], [960.0, 314.0], [1000.0, 314.3142857142858], [1.0, 305.0]], "isOverall": false, "label": "create booking", "isController": false}, {"data": [[552.0750000000005, 427.55899999999974]], "isOverall": false, "label": "create booking-Aggregated", "isController": false}, {"data": [[2.0, 327.0], [3.0, 332.0], [4.0, 321.0], [5.0, 323.0], [7.0, 326.5], [8.0, 317.0], [9.0, 315.0], [10.0, 656.0], [11.0, 316.0], [12.0, 320.0], [13.0, 320.0], [14.0, 321.0], [16.0, 312.0], [17.0, 331.0], [18.0, 320.0], [19.0, 309.0], [20.0, 319.0], [22.0, 321.5], [24.0, 319.0], [26.0, 312.0], [27.0, 311.0], [28.0, 315.0], [29.0, 325.0], [30.0, 317.0], [31.0, 311.0], [33.0, 316.0], [32.0, 319.0], [35.0, 320.0], [34.0, 305.0], [37.0, 318.0], [36.0, 326.0], [39.0, 312.0], [38.0, 311.0], [41.0, 309.0], [40.0, 314.0], [42.0, 313.0], [45.0, 324.0], [44.0, 310.5], [47.0, 312.0], [46.0, 330.0], [48.0, 317.0], [51.0, 311.0], [50.0, 322.5], [53.0, 313.0], [52.0, 313.0], [55.0, 314.0], [54.0, 312.0], [57.0, 324.0], [56.0, 329.0], [59.0, 329.0], [58.0, 328.0], [61.0, 318.0], [60.0, 325.0], [63.0, 319.0], [62.0, 318.0], [67.0, 316.0], [66.0, 320.0], [65.0, 320.0], [64.0, 325.0], [71.0, 311.0], [70.0, 324.0], [69.0, 316.0], [68.0, 313.0], [75.0, 302.0], [74.0, 312.0], [73.0, 308.0], [72.0, 314.0], [79.0, 320.0], [78.0, 320.0], [76.0, 318.0], [83.0, 332.0], [82.0, 348.0], [81.0, 328.0], [80.0, 318.0], [87.0, 316.0], [86.0, 319.0], [85.0, 340.5], [91.0, 329.0], [90.0, 311.0], [89.0, 315.0], [88.0, 312.0], [95.0, 317.0], [94.0, 323.0], [93.0, 321.0], [92.0, 315.0], [99.0, 316.0], [98.0, 322.0], [97.0, 323.0], [96.0, 326.0], [103.0, 311.0], [102.0, 314.0], [100.0, 319.0], [107.0, 317.0], [106.0, 310.0], [105.0, 314.0], [104.0, 306.0], [111.0, 316.0], [110.0, 309.0], [109.0, 313.0], [108.0, 314.0], [115.0, 311.0], [114.0, 307.0], [113.0, 326.5], [119.0, 314.0], [118.0, 305.0], [117.0, 322.0], [116.0, 334.0], [123.0, 326.0], [122.0, 324.5], [120.0, 329.0], [126.0, 304.0], [125.0, 309.0], [124.0, 321.0], [135.0, 329.0], [133.0, 333.0], [132.0, 323.0], [130.0, 330.0], [129.0, 314.0], [128.0, 324.0], [143.0, 313.0], [142.0, 321.0], [141.0, 308.0], [140.0, 322.0], [139.0, 322.5], [137.0, 328.0], [136.0, 331.0], [151.0, 320.0], [150.0, 321.0], [149.0, 313.0], [148.0, 311.0], [147.0, 314.0], [146.0, 325.0], [145.0, 320.0], [159.0, 312.0], [158.0, 307.0], [157.0, 321.0], [156.0, 328.0], [155.0, 310.0], [154.0, 326.0], [153.0, 324.0], [152.0, 304.0], [165.0, 312.0], [164.0, 303.0], [163.0, 314.0], [162.0, 323.0], [161.0, 308.0], [160.0, 310.0], [175.0, 297.0], [174.0, 311.5], [172.0, 320.0], [171.0, 310.0], [170.0, 323.0], [169.0, 313.0], [168.0, 322.6666666666667], [183.0, 324.0], [182.0, 309.0], [181.0, 312.0], [180.0, 311.0], [179.0, 304.0], [178.0, 307.0], [177.0, 310.0], [176.0, 304.0], [191.0, 318.0], [190.0, 313.0], [189.0, 309.0], [188.0, 317.0], [187.0, 308.0], [186.0, 317.0], [185.0, 307.0], [184.0, 307.0], [199.0, 314.0], [198.0, 307.0], [197.0, 316.0], [195.0, 306.0], [194.0, 301.0], [193.0, 314.0], [192.0, 316.0], [207.0, 321.0], [206.0, 311.0], [205.0, 318.0], [204.0, 313.0], [203.0, 317.0], [202.0, 310.0], [201.0, 302.0], [200.0, 301.0], [214.0, 314.0], [213.0, 321.0], [212.0, 321.0], [211.0, 302.0], [210.0, 308.0], [209.0, 321.0], [208.0, 321.0], [223.0, 315.0], [222.0, 321.0], [221.0, 320.0], [220.0, 338.0], [219.0, 327.0], [218.0, 317.0], [217.0, 1029.0], [216.0, 319.0], [231.0, 314.0], [230.0, 318.0], [229.0, 303.0], [228.0, 308.0], [227.0, 317.0], [225.0, 314.0], [224.0, 311.0], [239.0, 320.0], [238.0, 314.0], [237.0, 316.0], [236.0, 320.0], [235.0, 313.0], [234.0, 325.0], [233.0, 310.0], [232.0, 905.0], [247.0, 315.0], [246.0, 323.0], [245.0, 328.0], [244.0, 318.0], [243.0, 334.0], [242.0, 316.0], [241.0, 311.0], [240.0, 315.0], [254.0, 315.0], [253.0, 314.0], [252.0, 305.0], [251.0, 307.0], [250.0, 306.0], [249.0, 322.0], [248.0, 309.0], [270.0, 315.0], [271.0, 318.0], [269.0, 324.0], [268.0, 313.0], [267.0, 307.0], [266.0, 309.0], [265.0, 314.0], [264.0, 309.0], [263.0, 311.0], [257.0, 317.0], [256.0, 362.5], [259.0, 314.0], [258.0, 304.0], [262.0, 312.0], [261.0, 308.0], [260.0, 322.0], [286.0, 310.0], [287.0, 320.0], [285.0, 318.0], [284.0, 327.0], [283.0, 318.0], [282.0, 306.0], [281.0, 314.0], [280.0, 311.0], [279.0, 322.0], [273.0, 314.0], [272.0, 329.0], [275.0, 305.0], [274.0, 307.0], [278.0, 309.0], [277.0, 316.0], [276.0, 313.0], [303.0, 318.0], [302.0, 328.6666666666667], [299.0, 310.0], [298.0, 305.0], [297.0, 328.0], [296.0, 321.3333333333333], [293.0, 316.0], [292.0, 315.0], [291.0, 314.0], [290.0, 314.0], [289.0, 311.0], [288.0, 320.0], [318.0, 311.0], [319.0, 299.0], [317.0, 316.0], [316.0, 316.0], [315.0, 318.0], [314.0, 316.0], [313.0, 318.5], [311.0, 318.0], [305.0, 320.0], [304.0, 322.0], [307.0, 324.0], [306.0, 326.0], [310.0, 328.0], [309.0, 318.0], [308.0, 311.0], [333.0, 316.0], [334.0, 335.0], [332.0, 301.0], [323.0, 307.0], [322.0, 313.0], [321.0, 309.0], [320.0, 317.0], [331.0, 335.0], [330.0, 336.0], [329.0, 324.0], [328.0, 321.0], [326.0, 321.0], [325.0, 1963.0], [324.0, 301.0], [348.0, 318.5], [350.0, 318.0], [351.0, 319.0], [349.0, 323.0], [346.0, 310.0], [345.0, 333.0], [343.0, 318.0], [339.0, 314.0], [337.0, 312.0], [342.0, 316.0], [341.0, 322.0], [340.0, 307.0], [355.0, 352.0], [366.0, 356.0], [367.0, 355.0], [365.0, 374.6], [360.0, 364.0], [359.0, 357.0], [358.0, 367.0], [357.0, 357.0], [354.0, 364.0], [353.0, 321.0], [352.0, 355.0], [382.0, 308.0], [383.0, 310.0], [381.0, 310.0], [380.0, 308.0], [379.0, 320.0], [378.0, 305.0], [377.0, 313.0], [376.0, 304.0], [375.0, 310.0], [368.0, 360.0], [370.0, 323.0], [369.0, 327.0], [374.0, 320.0], [373.0, 334.0], [372.0, 332.5], [396.0, 321.0], [398.0, 319.0], [399.0, 317.0], [397.0, 318.0], [395.0, 325.0], [392.0, 310.6666666666667], [389.0, 318.0], [388.0, 308.0], [387.0, 321.0], [386.0, 313.0], [385.0, 319.0], [384.0, 308.0], [415.0, 330.6666666666667], [412.0, 332.0], [411.0, 306.5], [409.0, 322.0], [408.0, 327.0], [404.0, 322.0], [402.0, 327.5], [400.0, 325.0], [429.0, 310.0], [430.0, 311.0], [428.0, 314.0], [418.0, 333.0], [417.0, 313.0], [416.0, 332.0], [427.0, 304.0], [426.0, 317.0], [425.0, 332.0], [424.0, 336.0], [423.0, 338.0], [422.0, 1286.0], [421.0, 334.0], [435.0, 320.0], [446.0, 319.0], [444.0, 328.0], [443.0, 2271.0], [442.0, 335.0], [440.0, 343.0], [439.0, 335.5], [437.0, 338.0], [436.0, 311.0], [434.0, 324.0], [433.0, 329.0], [432.0, 333.0], [461.0, 2135.0], [463.0, 317.0], [460.0, 317.0], [451.0, 320.0], [450.0, 305.0], [449.0, 318.0], [448.0, 315.0], [459.0, 312.0], [458.0, 316.0], [457.0, 319.0], [456.0, 323.5], [454.0, 2190.0], [453.0, 314.0], [467.0, 313.0], [477.0, 342.0], [476.0, 344.0], [475.0, 335.0], [474.0, 345.5], [472.0, 340.0], [471.0, 332.0], [470.0, 339.6666666666667], [466.0, 312.0], [465.0, 316.0], [494.0, 366.5], [495.0, 1283.0], [492.0, 362.0], [483.0, 959.0], [480.0, 349.6666666666667], [491.0, 364.0], [490.0, 350.0], [489.0, 349.0], [488.0, 336.0], [487.0, 347.0], [486.0, 354.0], [511.0, 367.6666666666667], [508.0, 360.0], [506.0, 365.0], [504.0, 352.0], [503.0, 1072.6666666666667], [500.0, 368.0], [499.0, 371.3333333333333], [497.0, 363.0], [536.0, 381.5], [541.0, 1478.0], [542.0, 378.0], [530.0, 369.0], [528.0, 354.0], [540.0, 801.5], [538.0, 379.0], [537.0, 396.0], [527.0, 360.0], [514.0, 358.6666666666667], [517.0, 360.0], [516.0, 367.0], [519.0, 2075.0], [518.0, 353.0], [526.0, 362.0], [525.0, 355.0], [524.0, 339.0], [523.0, 352.5], [521.0, 333.5], [534.0, 376.0], [533.0, 360.0], [532.0, 2207.0], [531.0, 350.0], [570.0, 435.5], [574.0, 389.0], [575.0, 398.0], [562.0, 390.0], [561.0, 1367.5], [573.0, 399.0], [572.0, 383.0], [571.0, 392.0], [568.0, 415.0], [551.0, 380.0], [550.0, 386.0], [549.0, 909.5], [547.0, 2287.0], [546.0, 386.5], [544.0, 943.5], [559.0, 382.0], [558.0, 380.0], [557.0, 922.0], [555.0, 1445.0], [554.0, 1238.0], [552.0, 385.0], [567.0, 420.0], [566.0, 426.25], [600.0, 410.0], [605.0, 393.0], [607.0, 394.0], [593.0, 357.0], [592.0, 376.0], [595.0, 1229.0], [594.0, 1240.0], [603.0, 396.0], [602.0, 436.0], [601.0, 829.0], [591.0, 427.5], [577.0, 386.0], [576.0, 397.0], [579.0, 391.0], [578.0, 1408.0], [581.0, 381.0], [580.0, 391.0], [583.0, 401.0], [582.0, 401.0], [589.0, 382.0], [588.0, 383.0], [587.0, 392.0], [586.0, 386.0], [585.0, 392.0], [584.0, 388.0], [599.0, 385.0], [598.0, 375.0], [597.0, 378.0], [596.0, 376.0], [632.0, 350.0], [637.0, 323.0], [638.0, 320.0], [625.0, 396.0], [624.0, 390.0], [627.0, 388.0], [626.0, 400.0], [636.0, 309.0], [635.0, 342.0], [633.0, 747.0], [623.0, 409.0], [610.0, 365.0], [609.0, 445.0], [612.0, 361.0], [611.0, 376.0], [615.0, 381.0], [614.0, 406.5], [622.0, 389.0], [621.0, 394.5], [619.0, 406.0], [618.0, 392.0], [617.0, 398.5], [631.0, 351.0], [630.0, 377.0], [629.0, 377.0], [628.0, 381.0], [664.0, 327.0], [659.0, 332.0], [668.0, 336.0], [667.0, 324.0], [665.0, 321.0], [655.0, 313.0], [643.0, 314.5], [641.0, 320.0], [645.0, 306.0], [644.0, 307.0], [647.0, 307.0], [646.0, 514.0], [654.0, 314.0], [653.0, 304.0], [652.0, 315.0], [651.0, 315.0], [649.0, 307.0], [648.0, 309.0], [663.0, 308.0], [662.0, 313.0], [660.0, 327.0], [658.0, 319.0], [657.0, 319.5], [700.0, 314.0], [691.0, 323.0], [702.0, 307.0], [703.0, 309.0], [690.0, 316.5], [688.0, 312.0], [701.0, 310.0], [699.0, 327.6], [679.0, 324.0], [677.0, 310.0], [676.0, 316.0], [675.0, 324.0], [672.0, 322.25], [687.0, 309.0], [686.0, 319.0], [684.0, 314.0], [683.0, 308.0], [682.0, 313.0], [680.0, 314.0], [694.0, 304.0], [693.0, 306.0], [692.0, 327.0], [732.0, 328.25], [723.0, 378.0], [734.0, 321.0], [735.0, 305.0], [722.0, 384.0], [721.0, 399.0], [733.0, 334.0], [728.0, 320.0], [711.0, 323.0], [709.0, 323.0], [708.0, 308.0], [707.0, 308.0], [706.0, 320.0], [705.0, 329.0], [704.0, 308.0], [716.0, 321.0], [713.0, 316.0], [712.0, 315.0], [727.0, 378.0], [725.0, 372.0], [724.0, 373.0], [760.0, 427.0], [765.0, 498.0], [766.0, 507.0], [764.0, 502.0], [763.0, 475.0], [761.0, 438.0], [751.0, 328.0], [737.0, 326.0], [736.0, 327.0], [740.0, 315.0], [739.0, 314.0], [743.0, 305.0], [741.0, 321.0], [750.0, 333.0], [749.0, 332.0], [748.0, 322.0], [746.0, 315.0], [745.0, 316.0], [744.0, 308.0], [759.0, 432.6666666666667], [756.0, 420.3333333333333], [753.0, 393.0], [752.0, 398.0], [797.0, 2525.0], [788.0, 1473.0], [799.0, 335.5], [784.0, 320.0], [787.0, 305.0], [785.0, 314.0], [796.0, 312.0], [795.0, 1081.3333333333333], [792.0, 328.0], [775.0, 484.0], [774.0, 479.0], [773.0, 490.0], [772.0, 481.0], [771.0, 488.0], [770.0, 493.5], [768.0, 497.0], [783.0, 327.0], [781.0, 330.0], [780.0, 316.0], [779.0, 348.0], [778.0, 355.0], [777.0, 417.0], [776.0, 430.0], [791.0, 309.0], [790.0, 326.0], [789.0, 311.0], [825.0, 2356.0], [830.0, 324.0], [831.0, 329.0], [816.0, 306.0], [818.0, 316.0], [817.0, 323.0], [820.0, 339.0], [819.0, 326.0], [829.0, 325.5], [827.0, 324.0], [826.0, 2280.0], [824.0, 1141.0], [807.0, 2615.0], [806.0, 401.0], [805.0, 2612.0], [804.0, 2613.0], [803.0, 2596.0], [802.0, 346.0], [800.0, 346.0], [815.0, 2450.0], [814.0, 2447.0], [813.0, 2343.0], [812.0, 2515.0], [811.0, 317.0], [810.0, 323.0], [809.0, 2533.0], [808.0, 302.0], [823.0, 314.0], [821.0, 326.0], [856.0, 1170.0], [861.0, 395.0], [862.0, 398.0], [848.0, 1345.0], [851.0, 1398.0], [850.0, 889.0], [860.0, 404.0], [858.0, 1112.0], [857.0, 1130.0], [847.0, 1432.0], [833.0, 1198.0], [832.0, 356.0], [837.0, 1923.0], [836.0, 1663.3333333333333], [839.0, 407.0], [838.0, 1993.0], [846.0, 1409.0], [845.0, 1185.0], [844.0, 1437.0], [843.0, 394.0], [842.0, 1250.0], [841.0, 391.0], [840.0, 1862.0], [855.0, 1419.0], [854.0, 1208.0], [853.0, 1360.0], [852.0, 1383.0], [888.0, 401.0], [892.0, 396.0], [895.0, 396.0], [881.0, 415.5], [885.0, 411.3333333333333], [882.0, 408.0], [894.0, 393.0], [893.0, 397.0], [891.0, 388.0], [890.0, 391.0], [889.0, 400.0], [879.0, 375.5], [864.0, 401.5], [867.0, 398.0], [865.0, 381.0], [869.0, 389.0], [868.0, 388.0], [877.0, 360.0], [876.0, 394.0], [875.0, 402.0], [874.0, 409.0], [873.0, 386.0], [872.0, 398.0], [887.0, 413.0], [886.0, 375.0], [924.0, 323.0], [927.0, 313.0], [912.0, 315.25], [914.0, 315.0], [913.0, 317.0], [917.0, 315.0], [916.0, 328.0], [926.0, 313.0], [925.0, 322.0], [923.0, 325.0], [922.0, 306.0], [921.0, 306.0], [920.0, 319.0], [908.0, 324.0], [896.0, 389.0], [898.0, 371.0], [897.0, 396.0], [901.0, 308.5], [899.0, 351.0], [903.0, 310.0], [902.0, 307.0], [907.0, 319.0], [906.0, 311.5], [904.0, 314.0], [919.0, 322.0], [918.0, 323.0], [953.0, 313.0], [958.0, 2260.0], [959.0, 2275.0], [945.0, 336.0], [948.0, 325.5], [946.0, 326.0], [957.0, 355.0], [956.0, 335.0], [954.0, 2442.0], [952.0, 319.0], [935.0, 323.0], [934.0, 326.0], [933.0, 318.6666666666667], [930.0, 316.0], [929.0, 317.0], [928.0, 313.0], [943.0, 314.0], [942.0, 315.3333333333333], [940.0, 319.0], [938.0, 321.0], [937.0, 316.0], [936.0, 317.0], [951.0, 314.0], [949.0, 330.0], [967.0, 321.0], [978.0, 409.0], [987.0, 409.5], [985.0, 409.0], [984.0, 413.0], [966.0, 1940.0], [965.0, 307.0], [964.0, 1207.5], [962.0, 1117.0], [961.0, 306.0], [960.0, 311.0], [983.0, 417.0], [982.0, 412.3333333333333], [979.0, 402.0], [977.0, 1217.0], [976.0, 1415.0], [975.0, 1420.0], [974.0, 396.0], [973.0, 373.0], [972.0, 374.0], [971.0, 378.0], [970.0, 1795.0], [969.0, 1875.0], [968.0, 338.0], [1000.0, 362.0], [999.0, 367.0], [998.0, 371.0], [994.0, 380.0], [993.0, 405.1666666666667], [1.0, 371.0]], "isOverall": false, "label": "update booking", "isController": false}, {"data": [[500.7709999999997, 444.25299999999964]], "isOverall": false, "label": "update booking-Aggregated", "isController": false}, {"data": [[3.0, 328.0], [4.0, 327.0], [8.0, 317.0], [14.0, 321.0], [16.0, 321.0], [18.0, 321.0], [19.0, 316.0], [20.0, 315.5], [22.0, 315.0], [28.0, 355.875], [29.0, 310.875], [31.0, 314.3333333333333], [33.0, 319.0], [36.0, 317.0], [45.0, 314.0], [46.0, 331.0], [51.0, 325.0], [53.0, 311.0], [55.0, 316.6666666666667], [54.0, 311.0], [59.0, 315.6666666666667], [58.0, 315.6666666666667], [66.0, 320.0], [65.0, 318.6666666666667], [64.0, 323.0], [68.0, 312.5], [75.0, 314.0], [74.0, 328.0], [73.0, 322.0], [72.0, 315.5], [79.0, 316.0], [78.0, 321.0], [85.0, 327.6666666666667], [91.0, 315.3333333333333], [90.0, 301.0], [89.0, 315.0], [88.0, 320.0], [94.0, 313.25], [93.0, 303.0], [99.0, 313.0], [98.0, 309.375], [97.0, 321.0], [102.0, 319.0], [100.0, 313.5], [105.0, 318.0], [111.0, 309.0], [109.0, 325.0], [113.0, 315.0], [116.0, 333.5], [123.0, 312.3333333333333], [122.0, 326.0], [120.0, 321.0], [126.0, 335.0], [125.0, 298.0], [132.0, 317.25], [142.0, 305.0], [139.0, 312.0], [137.0, 310.0], [151.0, 299.0], [149.0, 310.5], [148.0, 309.0], [147.0, 310.3333333333333], [146.0, 314.0], [158.0, 319.0], [156.0, 319.3333333333333], [155.0, 323.3333333333333], [153.0, 316.0], [152.0, 310.75], [165.0, 305.0], [164.0, 310.5], [163.0, 308.0], [162.0, 310.0], [161.0, 316.0], [160.0, 468.5], [175.0, 310.16666666666663], [171.0, 304.0], [170.0, 317.0], [169.0, 324.0], [168.0, 312.6666666666667], [183.0, 311.0], [182.0, 311.5], [176.0, 310.5], [191.0, 304.0], [190.0, 321.0], [189.0, 306.3333333333333], [188.0, 408.6666666666667], [187.0, 304.5], [186.0, 305.6666666666667], [185.0, 310.3333333333333], [198.0, 307.0], [197.0, 320.0], [193.0, 306.0], [207.0, 310.0], [203.0, 309.0], [202.0, 315.5], [201.0, 302.0], [200.0, 316.0], [214.0, 315.3333333333333], [213.0, 317.0], [209.0, 309.0], [230.0, 312.3333333333333], [228.0, 306.0], [227.0, 310.0], [239.0, 321.6666666666667], [238.0, 318.0], [235.0, 321.0], [233.0, 306.0], [247.0, 310.0], [246.0, 317.5], [245.0, 310.6666666666667], [243.0, 320.0], [242.0, 314.5], [240.0, 311.5], [254.0, 337.0], [253.0, 326.0], [252.0, 319.0], [249.0, 321.0], [248.0, 310.0], [271.0, 309.0], [269.0, 319.0], [268.0, 305.0], [267.0, 309.0], [264.0, 311.0], [262.0, 320.0], [261.0, 309.75], [256.0, 315.0], [274.0, 307.0], [287.0, 311.0], [284.0, 322.0], [278.0, 312.0], [277.0, 325.0], [276.0, 310.5], [275.0, 313.0], [273.0, 313.1428571428571], [272.0, 308.0], [303.0, 316.0], [302.0, 336.0], [299.0, 313.6666666666667], [298.0, 307.0], [289.0, 311.0], [318.0, 306.0], [317.0, 309.0], [315.0, 324.0], [307.0, 314.5], [305.0, 305.0], [304.0, 311.0], [331.0, 368.6666666666667], [330.0, 331.5], [326.0, 315.4], [323.0, 318.0], [322.0, 319.0], [320.0, 312.6666666666667], [348.0, 315.25], [351.0, 306.0], [350.0, 315.0], [349.0, 301.5], [343.0, 320.0], [341.0, 314.3333333333333], [340.0, 308.0], [339.0, 312.0], [337.0, 310.0], [367.0, 351.0], [358.0, 334.0], [357.0, 327.0], [353.0, 320.6666666666667], [379.0, 316.0], [377.0, 325.0], [374.0, 315.0], [373.0, 312.0], [372.0, 343.0], [368.0, 2951.0], [399.0, 317.0], [396.0, 325.0], [392.0, 310.0], [389.0, 315.5], [415.0, 322.3333333333333], [412.0, 325.0], [411.0, 829.5], [409.0, 312.0], [408.0, 314.75], [404.0, 660.4], [402.0, 318.3333333333333], [400.0, 319.0], [429.0, 313.0], [427.0, 300.0], [426.0, 319.0], [425.0, 323.0], [424.0, 327.0], [423.0, 330.0], [421.0, 304.0], [416.0, 319.5], [446.0, 318.0], [443.0, 322.25], [442.0, 320.0], [440.0, 314.0], [439.0, 326.0], [432.0, 324.0], [437.0, 313.0], [436.0, 314.0], [435.0, 320.0], [433.0, 311.0], [463.0, 843.25], [451.0, 319.25], [450.0, 311.0], [448.0, 306.0], [477.0, 334.0], [476.0, 334.0], [474.0, 337.5], [471.0, 334.3333333333333], [470.0, 786.3333333333333], [467.0, 315.0], [465.0, 1798.0], [495.0, 689.3333333333334], [494.0, 351.0], [492.0, 353.5], [491.0, 362.0], [490.0, 830.4], [489.0, 1362.0], [486.0, 353.83333333333337], [480.0, 1387.0], [511.0, 350.0], [508.0, 353.0], [506.0, 689.0], [503.0, 937.0], [500.0, 355.5], [499.0, 364.0], [497.0, 359.5], [496.0, 358.0], [541.0, 1362.0], [542.0, 1374.3333333333333], [540.0, 1210.25], [534.0, 943.0], [533.0, 928.5], [530.0, 2213.0], [524.0, 335.0], [523.0, 1149.0], [519.0, 341.0], [518.0, 351.2], [516.0, 353.0], [514.0, 359.0], [572.0, 396.5], [575.0, 396.0], [574.0, 382.5], [573.0, 390.0], [570.0, 732.4444444444445], [550.0, 400.0], [549.0, 643.0], [547.0, 923.9999999999999], [546.0, 1003.6666666666666], [561.0, 383.0], [558.0, 719.6666666666667], [557.0, 384.6666666666667], [555.0, 388.0], [552.0, 395.0], [596.0, 378.0], [607.0, 402.7142857142857], [603.0, 399.0], [600.0, 411.0], [583.0, 1322.5], [582.0, 393.0], [581.0, 904.375], [580.0, 1396.0], [579.0, 389.0], [576.0, 391.0], [591.0, 402.0], [589.0, 1077.75], [588.0, 388.0], [586.0, 396.0], [585.0, 1290.0], [584.0, 376.0], [599.0, 403.0], [598.0, 382.0], [597.0, 1277.0], [595.0, 836.5], [594.0, 387.0], [625.0, 393.0], [637.0, 319.5], [635.0, 316.0], [632.0, 364.0], [615.0, 379.0], [614.0, 388.5], [612.0, 377.6], [610.0, 378.0], [609.0, 389.6], [631.0, 345.5], [630.0, 361.0], [626.0, 393.5], [624.0, 390.0], [623.0, 397.0], [618.0, 385.3333333333333], [617.0, 391.0], [644.0, 312.0], [655.0, 305.0], [668.0, 298.0], [651.0, 305.75], [649.0, 322.0833333333333], [648.0, 308.8], [647.0, 308.0], [645.0, 303.0], [643.0, 321.5], [642.0, 312.0], [701.0, 343.0], [694.0, 319.3333333333333], [682.0, 313.0], [679.0, 316.0], [734.0, 312.5], [735.0, 324.0], [733.0, 320.25], [732.0, 337.0], [727.0, 333.0], [723.0, 358.0], [721.0, 339.28571428571433], [716.0, 326.0], [706.0, 329.0], [704.0, 317.25], [711.0, 315.0], [707.0, 316.0], [713.0, 310.5], [712.0, 313.0], [766.0, 378.0], [765.0, 391.0], [744.0, 323.0], [743.0, 305.0], [741.0, 311.0], [739.0, 313.0], [737.0, 314.6666666666667], [787.0, 316.33333333333337], [797.0, 324.5], [799.0, 1555.5], [785.0, 314.0], [784.0, 320.0], [796.0, 1207.0], [795.0, 315.3333333333333], [792.0, 644.6666666666666], [775.0, 426.0], [773.0, 403.0], [772.0, 391.6666666666667], [771.0, 394.0], [783.0, 323.0], [780.0, 314.0], [779.0, 328.4], [778.0, 343.6666666666667], [776.0, 406.5], [791.0, 307.0], [790.0, 315.0], [789.0, 312.0], [830.0, 319.3333333333333], [831.0, 943.0], [827.0, 766.5], [825.0, 311.5], [821.0, 658.6666666666667], [820.0, 761.0], [816.0, 308.0], [811.0, 318.0], [802.0, 1562.0], [800.0, 348.0], [805.0, 385.5], [803.0, 375.0], [807.0, 1065.2857142857142], [806.0, 2790.0], [809.0, 1062.0], [808.0, 2695.0], [838.0, 383.3333333333333], [860.0, 383.0], [858.0, 1202.0], [853.0, 1211.0], [852.0, 1439.0], [850.0, 1457.3333333333333], [843.0, 394.0], [840.0, 2031.0], [837.0, 376.0], [832.0, 800.0], [893.0, 384.0], [894.0, 383.0], [892.0, 391.25], [891.0, 385.90909090909093], [889.0, 389.0], [888.0, 398.6666666666667], [874.0, 408.0], [887.0, 400.0], [885.0, 416.0], [881.0, 414.2], [903.0, 311.75000000000006], [925.0, 321.0], [920.0, 311.0], [916.0, 317.0], [908.0, 308.0], [904.0, 308.0], [901.0, 316.0], [899.0, 330.2857142857143], [898.0, 362.0], [897.0, 369.5], [896.0, 377.5], [956.0, 354.5], [959.0, 494.83333333333337], [945.0, 315.0], [958.0, 636.0], [957.0, 311.56250000000006], [955.0, 325.3333333333333], [954.0, 309.1], [953.0, 312.0], [952.0, 312.0], [936.0, 320.0], [934.0, 320.0], [951.0, 313.0], [949.0, 316.0], [977.0, 393.0], [976.0, 403.0], [972.0, 348.0], [971.0, 364.0], [970.0, 1275.5], [967.0, 318.5], [965.0, 1238.0], [962.0, 314.25], [960.0, 302.0], [1000.0, 377.4545454545454], [1.0, 313.0]], "isOverall": false, "label": "get booking", "isController": false}, {"data": [[527.3979999999992, 436.83500000000066]], "isOverall": false, "label": "get booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 22650.0, "minX": 1.73273016E12, "maxY": 59524.86666666667, "series": [{"data": [[1.73273016E12, 59524.86666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73273016E12, 22650.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73273016E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 427.55899999999974, "minX": 1.73273016E12, "maxY": 14359.987000000005, "series": [{"data": [[1.73273016E12, 14359.987000000005]], "isOverall": false, "label": "create token", "isController": false}, {"data": [[1.73273016E12, 427.55899999999974]], "isOverall": false, "label": "create booking", "isController": false}, {"data": [[1.73273016E12, 444.25299999999964]], "isOverall": false, "label": "update booking", "isController": false}, {"data": [[1.73273016E12, 436.83500000000066]], "isOverall": false, "label": "get booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73273016E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 427.5459999999999, "minX": 1.73273016E12, "maxY": 14359.745, "series": [{"data": [[1.73273016E12, 14359.745]], "isOverall": false, "label": "create token", "isController": false}, {"data": [[1.73273016E12, 427.5459999999999]], "isOverall": false, "label": "create booking", "isController": false}, {"data": [[1.73273016E12, 444.22100000000023]], "isOverall": false, "label": "update booking", "isController": false}, {"data": [[1.73273016E12, 436.81999999999994]], "isOverall": false, "label": "get booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73273016E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73273016E12, "maxY": 13896.925999999996, "series": [{"data": [[1.73273016E12, 13896.925999999996]], "isOverall": false, "label": "create token", "isController": false}, {"data": [[1.73273016E12, 0.0]], "isOverall": false, "label": "create booking", "isController": false}, {"data": [[1.73273016E12, 0.0]], "isOverall": false, "label": "update booking", "isController": false}, {"data": [[1.73273016E12, 0.0]], "isOverall": false, "label": "get booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73273016E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 295.0, "minX": 1.73273016E12, "maxY": 51033.0, "series": [{"data": [[1.73273016E12, 51033.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73273016E12, 295.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73273016E12, 14318.500000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73273016E12, 27826.92]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73273016E12, 347.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73273016E12, 24222.999999999978]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73273016E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 313.0, "minX": 1.0, "maxY": 22338.0, "series": [{"data": [[2.0, 10897.5], [34.0, 2578.5], [3.0, 313.0], [53.0, 316.0], [54.0, 482.5], [67.0, 317.0], [4.0, 327.5], [74.0, 1394.5], [77.0, 10817.0], [103.0, 371.0], [110.0, 320.0], [119.0, 318.0], [129.0, 315.0], [138.0, 319.0], [161.0, 316.0], [176.0, 1222.0], [183.0, 411.0], [190.0, 318.0], [207.0, 320.0], [215.0, 314.0], [261.0, 1251.0], [262.0, 323.0], [267.0, 392.0], [1.0, 371.0], [303.0, 403.0], [347.0, 357.0], [400.0, 338.5], [29.0, 22338.0], [31.0, 409.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 400.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 313.0, "minX": 1.0, "maxY": 22338.0, "series": [{"data": [[2.0, 10897.5], [34.0, 2569.5], [3.0, 313.0], [53.0, 316.0], [54.0, 482.5], [67.0, 317.0], [4.0, 327.5], [74.0, 1394.0], [77.0, 10817.0], [103.0, 371.0], [110.0, 320.0], [119.0, 318.0], [129.0, 315.0], [138.0, 319.0], [161.0, 316.0], [176.0, 1221.5], [183.0, 411.0], [190.0, 318.0], [207.0, 320.0], [215.0, 314.0], [261.0, 1251.0], [262.0, 323.0], [267.0, 391.0], [1.0, 371.0], [303.0, 403.0], [347.0, 357.0], [400.0, 338.5], [29.0, 22338.0], [31.0, 409.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 400.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.7327301E12, "maxY": 50.0, "series": [{"data": [[1.7327301E12, 16.666666666666668], [1.73273016E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73273016E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.73273016E12, "maxY": 66.66666666666667, "series": [{"data": [[1.73273016E12, 66.66666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73273016E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.73273016E12, "maxY": 16.666666666666668, "series": [{"data": [[1.73273016E12, 16.666666666666668]], "isOverall": false, "label": "create token-success", "isController": false}, {"data": [[1.73273016E12, 16.666666666666668]], "isOverall": false, "label": "get booking-success", "isController": false}, {"data": [[1.73273016E12, 16.666666666666668]], "isOverall": false, "label": "create booking-success", "isController": false}, {"data": [[1.73273016E12, 16.666666666666668]], "isOverall": false, "label": "update booking-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73273016E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.73273016E12, "maxY": 66.66666666666667, "series": [{"data": [[1.73273016E12, 66.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73273016E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

